{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/client/src/components/Quiz_Form.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation CreateQuiz($participant_name: String!, $answers: String!) {\\n    createQuiz(participant_name: $participant_name, answers: $answers) {\\n      id\\n      participant_name\\n      answers\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport StrappedInput from './form_groups/Strapped_Input';\nimport { Mutation } from 'react-apollo';\nimport Question from './Question';\nimport { Form, TextField, SubmitField } from 'react-components-form'; // Mutation that creates a quiz on submission of the form\n\nvar CREATE_QUIZ = gql(_templateObject());\nexport default function QuizForm(_ref) {\n  var data = _ref.data;\n  return React.createElement(Mutation, {\n    mutation: CREATE_QUIZ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (createQuiz) {\n    return React.createElement(Form, {\n      onSubmit: function onSubmit(e) {\n        createQuiz({\n          variables: {\n            \"participant_name\": e.participant_name,\n            \"answers\": JSON.stringify(e)\n          }\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"Participant Name\",\n      name: \"participant_name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), data.Questions.map(function (question) {\n      return React.createElement(\"section\", {\n        key: question.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Question, {\n        question: question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    }), React.createElement(SubmitField, {\n      value: \"Submit\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  });\n}","map":{"version":3,"sources":["/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/client/src/components/Quiz_Form.js"],"names":["React","gql","StrappedInput","Mutation","Question","Form","TextField","SubmitField","CREATE_QUIZ","QuizForm","data","createQuiz","e","variables","participant_name","JSON","stringify","Questions","map","question","label"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,QAA4C,uBAA5C,C,CAEA;;AACA,IAAMC,WAAW,GAAGP,GAAH,mBAAjB;AAUA,eAAe,SAASQ,QAAT,OAA0B;AAAA,MAAPC,IAAO,QAAPA,IAAO;AACvC,SACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEF,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAAAG,UAAU;AAAA,WACT,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACfD,QAAAA,UAAU,CAAC;AAAEE,UAAAA,SAAS,EAAE;AACtB,gCAAoBD,CAAC,CAACE,gBADA;AAEtB,uBAAWC,IAAI,CAACC,SAAL,CAAeJ,CAAf;AAFW;AAAb,SAAD,CAAV;AAGK,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,kBAAzC;AAA4D,MAAA,SAAS,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAWIF,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmB,UAAAC,QAAQ;AAAA,aAC3B;AAAS,QAAA,GAAG,EAAEA,QAAQ,CAACC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAED,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAD2B;AAAA,KAA3B,CAXJ,EAgBE,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADS;AAAA,GADb,CADF;AAwBD","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport StrappedInput from './form_groups/Strapped_Input';\nimport { Mutation } from 'react-apollo';\nimport Question from './Question';\nimport { Form, TextField, SubmitField} from 'react-components-form';\n\n// Mutation that creates a quiz on submission of the form\nconst CREATE_QUIZ = gql`\n  mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n`;\n\nexport default function QuizForm({data}) {\n  return (\n    <Mutation mutation={CREATE_QUIZ}>\n      {createQuiz => (\n        <Form\n          onSubmit={(e) => {\n            createQuiz({ variables: {\n              \"participant_name\": e.participant_name,\n              \"answers\": JSON.stringify(e)\n            }}) }\n          }\n        >\n          <div className=\"form-group\">\n            <TextField label=\"Participant Name\" name=\"participant_name\" className=\"form-control\" />\n          </div>\n          { data.Questions.map(question => (\n            <section key={question.label}>\n              <Question question={question} />\n            </section>\n          ))}\n          <SubmitField value=\"Submit\" className=\"form-control\" />\n        </Form>\n      )}\n    </Mutation>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}