  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-11-29 00:01:17.130418"], ["updated_at", "2018-11-29 00:01:17.130418"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-11-29 00:01:20.418533"], ["updated_at", "2018-11-29 00:01:20.418533"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-11-29 00:01:20.421589"], ["updated_at", "2018-11-29 00:01:20.421589"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-11-29 00:01:20.424123"], ["updated_at", "2018-11-29 00:01:20.424123"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-11-29 00:01:20.429534"], ["updated_at", "2018-11-29 00:01:20.429534"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Started GET "/" for 127.0.0.1 at 2018-11-28 18:01:47 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (1.7ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 890ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___3131762634530028052_70262890554640'
Started GET "/graphiql" for 127.0.0.1 at 2018-11-28 18:06:46 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (1028.8ms)
Completed 200 OK in 1040ms (Views: 1036.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 18:06:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 128ms (Views: 56.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 18:08:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser IDE for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will\n# see intelligent typeaheads aware of the current GraphQL type schema and\n# live syntax and validation errors highlighted within the text.\n#\n# To bring up the auto-complete at any point, just press Ctrl-Space.\n#\n# Press the run button above, or Cmd-Enter to execute the query, and the result\n# will appear in the pane to the right.\n\n{ ListQuestions {\n  position\n  options\n}}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser IDE for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will\n# see intelligent typeaheads aware of the current GraphQL type schema and\n# live syntax and validation errors highlighted within the text.\n#\n# To bring up the auto-complete at any point, just press Ctrl-Space.\n#\n# Press the run button above, or Cmd-Enter to execute the query, and the result\n# will appear in the pane to the right.\n\n{ ListQuestions {\n  position\n  options\n}}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 0.4ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 21:10:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    options\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    options\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuestion Load (8.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 61ms (Views: 5.4ms | ActiveRecord: 8.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 21:13:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 4ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 21:14:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 7ms (Views: 1.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 21:14:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    created_at\n    updated_at\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 15ms (Views: 2.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-28 21:14:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.5ms)


  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (2.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.9ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-11-29 03:25:48.249112"], ["updated_at", "2018-11-29 03:25:48.249112"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-11-29 03:25:48.252951"], ["updated_at", "2018-11-29 03:25:48.252951"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-11-29 03:25:48.255956"], ["updated_at", "2018-11-29 03:25:48.255956"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-11-29 03:25:48.260471"], ["updated_at", "2018-11-29 03:25:48.260471"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$AavIZC9dJzMJYwC.FTlTsO1gA6FHHExp/ZLm7WEk1ko3pMiH9GSty"], ["created_at", "2018-11-29 03:25:48.493892"], ["updated_at", "2018-11-29 03:25:48.493892"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Started GET "/admin" for 127.0.0.1 at 2018-11-28 21:26:57 -0600
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Admin::DashboardController#index as HTML
Completed 401 Unauthorized in 7ms (ActiveRecord: 0.0ms)


Started GET "/admin/login" for 127.0.0.1 at 2018-11-28 21:26:57 -0600
Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.9ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (58.6ms)
Started GET "/admin/login" for 127.0.0.1 at 2018-11-28 21:27:01 -0600
Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.2ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (58.4ms)
Completed 200 OK in 7682ms (Views: 7668.9ms | ActiveRecord: 0.7ms)


Completed 200 OK in 4181ms (Views: 4179.4ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-28 21:27:08 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"q+CCj68PgfhRC3KCqCkEgm4WcxHx7fDgUI6fegJEppsK5BY82k7cAtKJasjlzsBLdnmnroTeKGm7kGtQLmsERQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.4ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Completed 401 Unauthorized in 204ms (ActiveRecord: 0.4ms)


Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"q+CCj68PgfhRC3KCqCkEgm4WcxHx7fDgUI6fegJEppsK5BY82k7cAtKJasjlzsBLdnmnroTeKGm7kGtQLmsERQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.4ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (34.8ms)
Completed 200 OK in 355ms (Views: 200.6ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-28 21:27:36 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"mJKneVJfRoJiw3ou/aLqD/qpBjbq8IxQ+cHw7qZ1NTM5ljPKJx4beOFBYmSwRS7G4sbSiZ/DVNkS3wTEilqX7Q==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Redirected to http://localhost:3000/admin
Completed 302 Found in 198ms (ActiveRecord: 0.2ms)


Started GET "/admin" for 127.0.0.1 at 2018-11-28 21:27:37 -0600
Processing by Admin::DashboardController#index as HTML
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb (130.0ms)
Completed 200 OK in 146ms (Views: 140.9ms | ActiveRecord: 0.2ms)


Started GET "/admin" for 127.0.0.1 at 2018-11-28 21:37:40 -0600
Processing by Admin::DashboardController#index as HTML
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb (141.1ms)
Completed 200 OK in 167ms (Views: 149.4ms | ActiveRecord: 1.0ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-28 21:37:42 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (227.1ms)
Completed 200 OK in 254ms (Views: 242.2ms | ActiveRecord: 1.4ms)


Started GET "/" for 127.0.0.1 at 2018-11-29 13:32:41 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.1.5) lib/active_record/migration.rb:576:in `check_pending!'
activerecord (5.1.5) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/graphiql" for 127.0.0.1 at 2018-11-29 13:32:45 -0600
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.1.5) lib/active_record/migration.rb:576:in `check_pending!'
activerecord (5.1.5) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (2.8ms)[0m  [1m[35mDROP TABLE "active_admin_comments"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129032455"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "multiselect" boolean DEFAULT 'f', "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Migrating to AddQuestionToQuestionaires (20181129202341)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.2ms)[0m  [1m[35mALTER TABLE "questionaires" ADD "question_id" integer[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_questionaires_on_question_id" ON "questionaires" ("question_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129202341"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.0ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (3.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddQuestionToQuestionaires (20181129202341)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TEMPORARY TABLE "aquestionaires" ("id" integer NOT NULL PRIMARY KEY, "answers" text DEFAULT NULL, "participant_name" varchar DEFAULT 'string' NOT NULL, "multiselect" boolean DEFAULT 'f', "score" varchar DEFAULT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "question_id" integer DEFAULT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "tindex_aquestionaires_on_question_id" ON "aquestionaires" ("question_id")[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "aquestionaires" ("id","answers","participant_name","multiselect","score","created_at","updated_at","question_id")
                     SELECT "id","answers","participant_name","multiselect","score","created_at","updated_at","question_id" FROM "questionaires"[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" integer NOT NULL PRIMARY KEY, "answers" text DEFAULT NULL, "participant_name" varchar DEFAULT 'string' NOT NULL, "multiselect" boolean DEFAULT 'f', "score" varchar DEFAULT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='tindex_aquestionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='tindex_aquestionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "questionaires" ("id","answers","participant_name","multiselect","score","created_at","updated_at")
                     SELECT "id","answers","participant_name","multiselect","score","created_at","updated_at" FROM "aquestionaires"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE "aquestionaires"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129202341"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.3ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Migrating to AddQuestionToQuestionaires (20181129202341)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.9ms)[0m  [1m[35mALTER TABLE "questionaires" ADD "question_id" integer[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_questionaires_on_question_id" ON "questionaires" ("question_id")[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129202341"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddQuestionToQuestionaires (20181129202341)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TEMPORARY TABLE "aquestionaires" ("id" integer NOT NULL PRIMARY KEY, "answers" text DEFAULT NULL, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar DEFAULT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "question_id" integer DEFAULT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "tindex_aquestionaires_on_question_id" ON "aquestionaires" ("question_id")[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "aquestionaires" ("id","answers","participant_name","score","created_at","updated_at","question_id")
                     SELECT "id","answers","participant_name","score","created_at","updated_at","question_id" FROM "questionaires"[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" integer NOT NULL PRIMARY KEY, "answers" text DEFAULT NULL, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar DEFAULT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='tindex_aquestionaires_on_question_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='tindex_aquestionaires_on_question_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "questionaires" ("id","answers","participant_name","score","created_at","updated_at")
                     SELECT "id","answers","participant_name","score","created_at","updated_at" FROM "aquestionaires"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE "aquestionaires"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129202341"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.6ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.9ms)[0m  [1m[35mDROP TABLE "active_admin_comments"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129032455"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP INDEX "index_admin_users_on_reset_password_token"[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP INDEX "index_admin_users_on_email"[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE "admin_users"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129032451"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (2.8ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Migrating to AddQuestionaireToQuestions (20181129203844)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (14.5ms)[0m  [1m[35mALTER TABLE "questions" ADD "questionaire_id" integer[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE  INDEX "index_questions_on_questionaire_id" ON "questions" ("questionaire_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129203844"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddQuestionaireToQuestions (20181129203844)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TEMPORARY TABLE "aquestions" ("id" integer NOT NULL PRIMARY KEY, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text DEFAULT NULL, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "questionaire_id" integer DEFAULT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "tindex_aquestions_on_questionaire_id" ON "aquestions" ("questionaire_id")[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "aquestions" ("id","position","label","field_type","options","multiselect","created_at","updated_at","questionaire_id")
                     SELECT "id","position","label","field_type","options","multiselect","created_at","updated_at","questionaire_id" FROM "questions"[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE "questions"[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" integer NOT NULL PRIMARY KEY, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text DEFAULT NULL, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='tindex_aquestions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='tindex_aquestions_on_questionaire_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "questions" ("id","position","label","field_type","options","multiselect","created_at","updated_at")
                     SELECT "id","position","label","field_type","options","multiselect","created_at","updated_at" FROM "aquestions"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE "aquestions"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129203844"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "questionaires" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Migrating to AddQuestionaireToQuestions (20181129203844)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.0ms)[0m  [1m[35mALTER TABLE "questions" ADD "questionaire_id" integer[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE  INDEX "index_questions_on_questionaire_id" ON "questions" ("questionaire_id")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129203844"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-11-29 15:17:45 -0600
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (249.5ms)
Completed 200 OK in 276ms (Views: 270.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:17:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 18ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:18:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 2ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:18:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 10ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:21:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:22:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:22:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 3ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/questionaire.rb:8: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
  field :field_type, types.String
        ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/questionaire.rb:11: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/questionaire.rb:8: syntax error, unexpected tSYMBEG, expecting keyword_do or '{' or '('
app/graphql/types/questionaire.rb:11: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/types/query_type.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:24:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-11-29 15:27:52 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (18.7ms)
Completed 200 OK in 42ms (Views: 37.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:27:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:27:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:28:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:29:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:31:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms


  
NameError (uninitialized constant PostType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:32:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\t\n    \n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\t\n    \n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NameError (uninitialized constant PostType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:32:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tLis\n    \n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tLis\n    \n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:32:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:33:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:34:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:37:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 6ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:38:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:39:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:39:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:40:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:40:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NameError (uninitialized constant QuestionaireType):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:41:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:42:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 22ms


  
NameError (uninitialized constant QuestionType):
  
app/graphql/types/questionaire.rb:8:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 15:57:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
ArgumentError (wrong number of arguments (given 2, expected 1)):
  
app/graphql/types/query_type.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:07:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 3ms


  
NameError (uninitialized constant GraphQL::Schema::ObjectType):
  
app/graphql/types/query_type.rb:1:in `<top (required)>'
app/graphql/cohub_code_challenge_schema.rb:3:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:08:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 5ms


  
NameError (uninitialized constant Types::Question):
  
app/graphql/types/query_type.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:08:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 3ms


  
NameError (uninitialized constant Types::Question):
  
app/graphql/types/query_type.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:09:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 24ms


  
NoMethodError (undefined method `to_list_type' for #<Class:0x00007fbd5a23ced0>):
  
app/graphql/types/query_type.rb:11:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:10:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:13:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:13:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 8ms


  
NameError (uninitialized constant Types::QuestionType):
  
app/graphql/types/questionaire.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:14:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 9ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:27:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:27:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `QuestionaireType' for #<GraphQL::Define::TypeDefiner:0x00007fbd53df3280>):
  
app/graphql/types/question.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:27:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 500 Internal Server Error in 7ms


  
NameError (uninitialized constant Types::QuestionType):
  
app/graphql/types/questionaire.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:29:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 30ms


  
NameError (uninitialized constant Types::QuestionType):
  
app/graphql/types/questionaire.rb:6:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/admin" for 127.0.0.1 at 2018-11-29 16:29:26 -0600
Processing by Admin::DashboardController#index as HTML
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 401 Unauthorized in 13ms (ActiveRecord: 1.8ms)


Started GET "/admin/login" for 127.0.0.1 at 2018-11-29 16:29:26 -0600
Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.3ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (46.9ms)
Completed 200 OK in 338ms (Views: 324.8ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-29 16:29:30 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"eirsGPGp9Z9ePzP1CuLpp+B9GytqSszLXjKmu/JFNM+1b/CvocDo4DVjru/BUBkObiEoM7JaQjv0SKR9EwCbMQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Completed 401 Unauthorized in 5ms (ActiveRecord: 0.5ms)


Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"eirsGPGp9Z9ePzP1CuLpp+B9GytqSszLXjKmu/JFNM+1b/CvocDo4DVjru/BUBkObiEoM7JaQjv0SKR9EwCbMQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.2ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (30.3ms)
Completed 200 OK in 338ms (Views: 173.6ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-29 16:29:41 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"4ABJNTL+03/JDBcEX8WH7CMYMrzr4GW2r1WBUwaxnfcvRVWCYpfOAKJQih6Ud3dFrUQBpDPw60YFL4OV5/QyCQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Completed 401 Unauthorized in 2ms (ActiveRecord: 0.2ms)


Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"4ABJNTL+03/JDBcEX8WH7CMYMrzr4GW2r1WBUwaxnfcvRVWCYpfOAKJQih6Ud3dFrUQBpDPw60YFL4OV5/QyCQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.5ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (39.1ms)
Completed 200 OK in 352ms (Views: 192.3ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-29 16:29:47 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"N7+HyzXo1W/MfLlmPr6poWZniFFpEcnbVU9CgVeOYkz4+pt8ZYHIEKcgJHz1DFkI6Du7SbEBRyv/NUBHtsvNsg==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Completed 401 Unauthorized in 2ms (ActiveRecord: 0.2ms)


Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"N7+HyzXo1W/MfLlmPr6poWZniFFpEcnbVU9CgVeOYkz4+pt8ZYHIEKcgJHz1DFkI6Du7SbEBRyv/NUBHtsvNsg==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.0ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (23.9ms)
Completed 200 OK in 302ms (Views: 143.9ms | ActiveRecord: 0.0ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-29 16:30:15 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"SCkV/IgpEp5FwMF+RcQERdFJU5VAcvOnqS4s1iRv3aeHbAlL2EAP4S6cXGSOdvTsXxVgjZhifVcDVC4QxSpyWQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Completed 401 Unauthorized in 2ms (ActiveRecord: 0.2ms)


Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"SCkV/IgpEp5FwMF+RcQERdFJU5VAcvOnqS4s1iRv3aeHbAlL2EAP4S6cXGSOdvTsXxVgjZhifVcDVC4QxSpyWQ==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (1.1ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (25.5ms)
Completed 200 OK in 318ms (Views: 161.3ms | ActiveRecord: 0.0ms)


  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$mCkX4YteeKwlwM3uxSBp/.KMC0F6vxN3U9IcNyuDvX99vgSpk6Ani"], ["created_at", "2018-11-29 22:30:36.103900"], ["updated_at", "2018-11-29 22:30:36.103900"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Started GET "/admin/login" for 127.0.0.1 at 2018-11-29 16:31:04 -0600
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by ActiveAdmin::Devise::SessionsController#new as HTML
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/shared/_links.erb (4.0ms)
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/devise/sessions/new.html.erb within layouts/active_admin_logged_out (83.1ms)
Completed 200 OK in 1526ms (Views: 1503.7ms | ActiveRecord: 0.9ms)


Started POST "/admin/login" for 127.0.0.1 at 2018-11-29 16:31:07 -0600
Processing by ActiveAdmin::Devise::SessionsController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"mpB3p3e3V0YLGfQHu2U/D/62AJZjuS6Z0ueitaI/A6xV1WsQJ95KOWBFaR1w18+mcOozjrupoGl4naBzQ3qsUg==", "admin_user"=>{"email"=>"admin@example.com", "password"=>"[FILTERED]", "remember_me"=>"0"}, "commit"=>"Login"}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."email" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
Redirected to http://localhost:3000/admin
Completed 302 Found in 218ms (ActiveRecord: 0.3ms)


Started GET "/admin" for 127.0.0.1 at 2018-11-29 16:31:08 -0600
Processing by Admin::DashboardController#index as HTML
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/page/index.html.arb (168.9ms)
Completed 200 OK in 186ms (Views: 180.6ms | ActiveRecord: 0.2ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-29 16:31:12 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestionaire Load (0.2ms)[0m  [1m[34mSELECT "questionaires".* FROM "questionaires"[0m
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (422.3ms)
Completed 200 OK in 526ms (Views: 507.1ms | ActiveRecord: 3.1ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-29 16:34:07 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestionaire Load (0.2ms)[0m  [1m[34mSELECT "questionaires".* FROM "questionaires"[0m
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (190.9ms)
Completed 200 OK in 234ms (Views: 202.5ms | ActiveRecord: 3.1ms)


Started GET "/admin/questionaires" for 127.0.0.1 at 2018-11-29 16:34:12 -0600
Processing by Admin::QuestionairesController#index as HTML
  [1m[36mAdminUser Load (0.6ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questionaires" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions"[0m
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (145.5ms)
Completed 200 OK in 175ms (Views: 164.7ms | ActiveRecord: 1.1ms)


Started GET "/admin/questionaires/new" for 127.0.0.1 at 2018-11-29 16:34:14 -0600
Processing by Admin::QuestionairesController#new as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/new.html.arb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/new.html.arb (132.8ms)
Completed 200 OK in 165ms (Views: 149.9ms | ActiveRecord: 0.3ms)


Started POST "/admin/questionaires" for 127.0.0.1 at 2018-11-29 16:34:31 -0600
Processing by Admin::QuestionairesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"rwAYKzbcXFK7esKbLIJh+iUeYVoT+Am9swLIxSRRCa01pVGxXdofkIWgC9DVnqT6s0uHVKPA5y9okZFYElqe/Q==", "questionaire"=>{"answers"=>"", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Questionaire"}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questionaires" ("answers", "participant_name", "score", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randy Russell"], ["score", ""], ["created_at", "2018-11-29 22:34:31.949088"], ["updated_at", "2018-11-29 22:34:31.949088"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Redirected to http://localhost:3000/admin/questionaires/1
Completed 302 Found in 93ms (ActiveRecord: 2.6ms)


Started GET "/admin/questionaires/1" for 127.0.0.1 at 2018-11-29 16:34:32 -0600
Processing by Admin::QuestionairesController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestionaire Load (0.2ms)[0m  [1m[34mSELECT  "questionaires".* FROM "questionaires" WHERE "questionaires"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ?[0m  [["resource_type", "Questionaire"], ["namespace", "admin"]]
  [1m[36mActiveAdmin::Comment Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ? LIMIT ? OFFSET ?[0m  [["resource_type", "Questionaire"], ["namespace", "admin"], ["LIMIT", 1], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb (175.0ms)
Completed 200 OK in 196ms (Views: 189.0ms | ActiveRecord: 1.3ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-29 16:34:37 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.7ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestionaire Load (0.2ms)[0m  [1m[34mSELECT "questionaires".* FROM "questionaires"[0m
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (152.0ms)
Completed 200 OK in 175ms (Views: 168.4ms | ActiveRecord: 1.5ms)


Started GET "/admin/questions/8/edit" for 127.0.0.1 at 2018-11-29 16:34:55 -0600
Processing by Admin::QuestionsController#edit as HTML
  Parameters: {"id"=>"8"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/edit.html.arb
  [1m[36mCACHE Question Load (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  [1m[36mQuestionaire Load (0.2ms)[0m  [1m[34mSELECT "questionaires".* FROM "questionaires"[0m
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/edit.html.arb (140.5ms)
Completed 200 OK in 162ms (Views: 158.6ms | ActiveRecord: 0.6ms)


  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddQuestionaireToQuestions (20181129203844)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE TEMPORARY TABLE "aquestions" ("id" integer NOT NULL PRIMARY KEY, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text DEFAULT NULL, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "questionaire_id" integer DEFAULT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_questions_on_questionaire_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "tindex_aquestions_on_questionaire_id" ON "aquestions" ("questionaire_id")[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "aquestions" ("id","position","label","field_type","options","multiselect","created_at","updated_at","questionaire_id")
                     SELECT "id","position","label","field_type","options","multiselect","created_at","updated_at","questionaire_id" FROM "questions"[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE "questions"[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" integer NOT NULL PRIMARY KEY, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text DEFAULT NULL, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='tindex_aquestions_on_questionaire_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='tindex_aquestions_on_questionaire_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[32mINSERT INTO "questions" ("id","position","label","field_type","options","multiselect","created_at","updated_at")
                     SELECT "id","position","label","field_type","options","multiselect","created_at","updated_at" FROM "aquestions"[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE "aquestions"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129203844"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestionaires (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE "questionaires"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 16:59:23 -0600
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.1.5) lib/active_record/migration.rb:576:in `check_pending!'
activerecord (5.1.5) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "quizes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:00:55 -0600
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 69ms (Views: 0.4ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:01:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizes {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizes {\n    position\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started GET "/admin/questions/8/edit" for 127.0.0.1 at 2018-11-29 17:01:40 -0600
Processing by Admin::QuestionsController#edit as HTML
  Parameters: {"id"=>"8"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/edit.html.arb
  [1m[36mCACHE Question Load (0.0ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" WHERE "questions"."id" = ? LIMIT ?[0m  [["id", 8], ["LIMIT", 1]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/edit.html.arb (896.0ms)
Completed 200 OK in 965ms (Views: 929.8ms | ActiveRecord: 1.0ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:01:44 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (1.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 7ms (ActiveRecord: 2.1ms)


  
ActiveRecord::StatementInvalid (Could not find table 'quizzes'):
  
activerecord (5.1.5) lib/active_record/connection_adapters/sqlite3_adapter.rb:417:in `table_structure'
activerecord (5.1.5) lib/active_record/connection_adapters/abstract_adapter.rb:167:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:67:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:73:in `columns_hash'
activerecord (5.1.5) lib/active_record/model_schema.rb:471:in `load_schema!'
activerecord (5.1.5) lib/active_record/attributes.rb:233:in `load_schema!'
activerecord (5.1.5) lib/active_record/attribute_decorators.rb:50:in `load_schema!'
activerecord (5.1.5) lib/active_record/model_schema.rb:464:in `block in load_schema'
/Users/XWINGFIGHTER/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/monitor.rb:226:in `mon_synchronize'
activerecord (5.1.5) lib/active_record/model_schema.rb:461:in `load_schema'
activerecord (5.1.5) lib/active_record/model_schema.rb:348:in `columns'
activerecord (5.1.5) lib/active_record/model_schema.rb:393:in `column_names'
activeadmin (1.4.2) lib/active_admin/resource.rb:111:in `resource_column_names'
activeadmin (1.4.2) lib/active_admin/order_clause.rb:27:in `table'
activeadmin (1.4.2) lib/active_admin/order_clause.rb:32:in `table_column'
activeadmin (1.4.2) lib/active_admin/order_clause.rb:23:in `to_sql'
activeadmin (1.4.2) lib/active_admin/order_clause.rb:36:in `sql'
activeadmin (1.4.2) lib/active_admin/order_clause.rb:19:in `apply'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:208:in `apply_sorting'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:59:in `block in find_collection'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:58:in `each'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:58:in `find_collection'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:44:in `collection'
inherited_resources (1.9.0) lib/inherited_resources/actions.rb:7:in `index'
activeadmin (1.4.2) lib/active_admin/resource_controller/streaming.rb:12:in `index'
actionpack (5.1.5) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.5) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.5) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.5) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.5) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.5) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.5) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:844:in `call'
warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
warden (1.2.7) lib/warden/manager.rb:35:in `catch'
warden (1.2.7) lib/warden/manager.rb:35:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:25:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
rack (2.0.5) lib/rack/session/abstract/id.rb:232:in `context'
rack (2.0.5) lib/rack/session/abstract/id.rb:226:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/cookies.rb:613:in `call'
activerecord (5.1.5) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mDROP TABLE "quizzes"[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mDROP TABLE "quizes"[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (4.8ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.6ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (3.7ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started GET "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:05:35 -0600
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (181.6ms)
Completed 200 OK in 228ms (Views: 199.7ms | ActiveRecord: 3.9ms)


Started GET "/admin/quizzes/new" for 127.0.0.1 at 2018-11-29 17:05:38 -0600
Processing by Admin::QuizzesController#new as HTML
  [1m[36mAdminUser Load (0.4ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/new.html.arb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/new.html.arb (136.8ms)
Completed 200 OK in 175ms (Views: 160.2ms | ActiveRecord: 0.4ms)


Started POST "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:05:51 -0600
Processing by Admin::QuizzesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"6jjeeoRmF10A/2IGLXq2rTORVzTO4F2myZ7Wh+6xQZdwnZfg72BUnz4lq03UZnOtpcSxOn7YszQSDY8a2LrWxw==", "quiz"=>{"answers"=>"[]", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Quiz"}
  [1m[36mAdminUser Load (0.4ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 7ms (ActiveRecord: 0.4ms)


  
ActiveRecord::SerializationTypeMismatch (can't serialize `answers`: was supposed to be a Array, but was a String. -- "[]"):
  
activerecord (5.1.5) lib/active_record/coders/yaml_column.rb:34:in `assert_valid_value'
activerecord (5.1.5) lib/active_record/type/serialized.rb:48:in `assert_valid_value'
activerecord (5.1.5) lib/active_record/attribute.rb:67:in `with_value_from_user'
activerecord (5.1.5) lib/active_record/attribute_set.rb:54:in `write_from_user'
activerecord (5.1.5) lib/active_record/attribute_methods/write.rb:39:in `write_attribute'
activerecord (5.1.5) lib/active_record/attribute_methods/write.rb:20:in `__temp__16e63777562737='
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:46:in `public_send'
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:46:in `_assign_attribute'
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:40:in `block in _assign_attributes'
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:39:in `each'
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:39:in `_assign_attributes'
activerecord (5.1.5) lib/active_record/attribute_assignment.rb:26:in `_assign_attributes'
activemodel (5.1.5) lib/active_model/attribute_assignment.rb:33:in `assign_attributes'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:289:in `assign_attributes'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:118:in `build_resource'
inherited_resources (1.9.0) lib/inherited_resources/actions.rb:31:in `create'
actionpack (5.1.5) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.5) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.5) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.5) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.5) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.5) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.5) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:844:in `call'
warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
warden (1.2.7) lib/warden/manager.rb:35:in `catch'
warden (1.2.7) lib/warden/manager.rb:35:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
rack (2.0.5) lib/rack/session/abstract/id.rb:232:in `context'
rack (2.0.5) lib/rack/session/abstract/id.rb:226:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/cookies.rb:613:in `call'
activerecord (5.1.5) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE "quizzes"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started POST "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:07:03 -0600
Processing by Admin::QuizzesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"6jjeeoRmF10A/2IGLXq2rTORVzTO4F2myZ7Wh+6xQZdwnZfg72BUnz4lq03UZnOtpcSxOn7YszQSDY8a2LrWxw==", "quiz"=>{"answers"=>"[]", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Quiz"}
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 14ms (ActiveRecord: 0.9ms)


  
ActiveRecord::StatementInvalid (Could not find table 'quizzes'):
  
activerecord (5.1.5) lib/active_record/connection_adapters/sqlite3_adapter.rb:417:in `table_structure'
activerecord (5.1.5) lib/active_record/connection_adapters/abstract_adapter.rb:167:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:67:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:73:in `columns_hash'
activerecord (5.1.5) lib/active_record/model_schema.rb:471:in `load_schema!'
activerecord (5.1.5) lib/active_record/attributes.rb:233:in `load_schema!'
activerecord (5.1.5) lib/active_record/attribute_decorators.rb:50:in `load_schema!'
activerecord (5.1.5) lib/active_record/model_schema.rb:464:in `block in load_schema'
/Users/XWINGFIGHTER/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/monitor.rb:226:in `mon_synchronize'
activerecord (5.1.5) lib/active_record/model_schema.rb:461:in `load_schema'
activerecord (5.1.5) lib/active_record/model_schema.rb:353:in `attribute_types'
activerecord (5.1.5) lib/active_record/attribute_methods.rb:179:in `has_attribute?'
activerecord (5.1.5) lib/active_record/inheritance.rb:55:in `new'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:131:in `build_new_resource'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:116:in `build_resource'
inherited_resources (1.9.0) lib/inherited_resources/actions.rb:31:in `create'
actionpack (5.1.5) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.5) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.5) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.5) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.5) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.5) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.5) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:844:in `call'
warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
warden (1.2.7) lib/warden/manager.rb:35:in `catch'
warden (1.2.7) lib/warden/manager.rb:35:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
rack (2.0.5) lib/rack/session/abstract/id.rb:232:in `context'
rack (2.0.5) lib/rack/session/abstract/id.rb:226:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/cookies.rb:613:in `call'
activerecord (5.1.5) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:07:54 -0600
Processing by Admin::QuizzesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"6jjeeoRmF10A/2IGLXq2rTORVzTO4F2myZ7Wh+6xQZdwnZfg72BUnz4lq03UZnOtpcSxOn7YszQSDY8a2LrWxw==", "quiz"=>{"answers"=>"[]", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Quiz"}
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 17ms (ActiveRecord: 0.9ms)


  
ActiveRecord::StatementInvalid (Could not find table 'quizzes'):
  
activerecord (5.1.5) lib/active_record/connection_adapters/sqlite3_adapter.rb:417:in `table_structure'
activerecord (5.1.5) lib/active_record/connection_adapters/abstract_adapter.rb:167:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:67:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:73:in `columns_hash'
activerecord (5.1.5) lib/active_record/model_schema.rb:471:in `load_schema!'
activerecord (5.1.5) lib/active_record/attributes.rb:233:in `load_schema!'
activerecord (5.1.5) lib/active_record/attribute_decorators.rb:50:in `load_schema!'
activerecord (5.1.5) lib/active_record/model_schema.rb:464:in `block in load_schema'
/Users/XWINGFIGHTER/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/monitor.rb:226:in `mon_synchronize'
activerecord (5.1.5) lib/active_record/model_schema.rb:461:in `load_schema'
activerecord (5.1.5) lib/active_record/model_schema.rb:353:in `attribute_types'
activerecord (5.1.5) lib/active_record/attribute_methods.rb:179:in `has_attribute?'
activerecord (5.1.5) lib/active_record/inheritance.rb:55:in `new'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:131:in `build_new_resource'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:116:in `build_resource'
inherited_resources (1.9.0) lib/inherited_resources/actions.rb:31:in `create'
actionpack (5.1.5) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.5) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.5) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.5) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.5) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.5) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.5) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:844:in `call'
warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
warden (1.2.7) lib/warden/manager.rb:35:in `catch'
warden (1.2.7) lib/warden/manager.rb:35:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
rack (2.0.5) lib/rack/session/abstract/id.rb:232:in `context'
rack (2.0.5) lib/rack/session/abstract/id.rb:226:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/cookies.rb:613:in `call'
activerecord (5.1.5) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:07:59 -0600
Processing by Admin::QuizzesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"6jjeeoRmF10A/2IGLXq2rTORVzTO4F2myZ7Wh+6xQZdwnZfg72BUnz4lq03UZnOtpcSxOn7YszQSDY8a2LrWxw==", "quiz"=>{"answers"=>"[]", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Quiz"}
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
Completed 500 Internal Server Error in 24ms (ActiveRecord: 1.3ms)


  
ActiveRecord::StatementInvalid (Could not find table 'quizzes'):
  
activerecord (5.1.5) lib/active_record/connection_adapters/sqlite3_adapter.rb:417:in `table_structure'
activerecord (5.1.5) lib/active_record/connection_adapters/abstract_adapter.rb:167:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:67:in `columns'
activerecord (5.1.5) lib/active_record/connection_adapters/schema_cache.rb:73:in `columns_hash'
activerecord (5.1.5) lib/active_record/model_schema.rb:471:in `load_schema!'
activerecord (5.1.5) lib/active_record/attributes.rb:233:in `load_schema!'
activerecord (5.1.5) lib/active_record/attribute_decorators.rb:50:in `load_schema!'
activerecord (5.1.5) lib/active_record/model_schema.rb:464:in `block in load_schema'
/Users/XWINGFIGHTER/.rvm/rubies/ruby-2.5.1/lib/ruby/2.5.0/monitor.rb:226:in `mon_synchronize'
activerecord (5.1.5) lib/active_record/model_schema.rb:461:in `load_schema'
activerecord (5.1.5) lib/active_record/model_schema.rb:353:in `attribute_types'
activerecord (5.1.5) lib/active_record/attribute_methods.rb:179:in `has_attribute?'
activerecord (5.1.5) lib/active_record/inheritance.rb:55:in `new'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:131:in `build_new_resource'
activeadmin (1.4.2) lib/active_admin/resource_controller/data_access.rb:116:in `build_resource'
inherited_resources (1.9.0) lib/inherited_resources/actions.rb:31:in `create'
actionpack (5.1.5) lib/action_controller/metal/basic_implicit_render.rb:4:in `send_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:186:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rendering.rb:30:in `process_action'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:20:in `block in process_action'
activesupport (5.1.5) lib/active_support/callbacks.rb:131:in `run_callbacks'
actionpack (5.1.5) lib/abstract_controller/callbacks.rb:19:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/rescue.rb:20:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `block in instrument'
activesupport (5.1.5) lib/active_support/notifications/instrumenter.rb:21:in `instrument'
activesupport (5.1.5) lib/active_support/notifications.rb:166:in `instrument'
actionpack (5.1.5) lib/action_controller/metal/instrumentation.rb:30:in `process_action'
actionpack (5.1.5) lib/action_controller/metal/params_wrapper.rb:252:in `process_action'
activerecord (5.1.5) lib/active_record/railties/controller_runtime.rb:22:in `process_action'
actionpack (5.1.5) lib/abstract_controller/base.rb:124:in `process'
actionview (5.1.5) lib/action_view/rendering.rb:30:in `process'
actionpack (5.1.5) lib/action_controller/metal.rb:189:in `dispatch'
actionpack (5.1.5) lib/action_controller/metal.rb:253:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:49:in `dispatch'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:31:in `serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:50:in `block in serve'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `each'
actionpack (5.1.5) lib/action_dispatch/journey/router.rb:33:in `serve'
actionpack (5.1.5) lib/action_dispatch/routing/route_set.rb:844:in `call'
warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
warden (1.2.7) lib/warden/manager.rb:35:in `catch'
warden (1.2.7) lib/warden/manager.rb:35:in `call'
rack (2.0.5) lib/rack/etag.rb:25:in `call'
rack (2.0.5) lib/rack/conditional_get.rb:38:in `call'
rack (2.0.5) lib/rack/head.rb:12:in `call'
rack (2.0.5) lib/rack/session/abstract/id.rb:232:in `context'
rack (2.0.5) lib/rack/session/abstract/id.rb:226:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/cookies.rb:613:in `call'
activerecord (5.1.5) lib/active_record/migration.rb:556:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.5) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.5) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started POST "/admin/quizzes" for 127.0.0.1 at 2018-11-29 17:08:19 -0600
Processing by Admin::QuizzesController#create as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"6jjeeoRmF10A/2IGLXq2rTORVzTO4F2myZ7Wh+6xQZdwnZfg72BUnz4lq03UZnOtpcSxOn7YszQSDY8a2LrWxw==", "quiz"=>{"answers"=>"[]", "participant_name"=>"Randy Russell", "score"=>""}, "commit"=>"Create Quiz"}
  [1m[36mAdminUser Load (0.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "score", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["answers", "[]"], ["participant_name", "Randy Russell"], ["score", ""], ["created_at", "2018-11-29 23:08:20.002001"], ["updated_at", "2018-11-29 23:08:20.002001"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Redirected to http://localhost:3000/admin/quizzes/1
Completed 302 Found in 132ms (ActiveRecord: 3.9ms)


Started GET "/admin/quizzes/1" for 127.0.0.1 at 2018-11-29 17:08:20 -0600
Processing by Admin::QuizzesController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" WHERE "quizzes"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ?[0m  [["resource_type", "Quiz"], ["namespace", "admin"]]
  [1m[36mActiveAdmin::Comment Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ? LIMIT ? OFFSET ?[0m  [["resource_type", "Quiz"], ["namespace", "admin"], ["LIMIT", 1], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb (287.7ms)
Completed 200 OK in 312ms (Views: 306.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:09:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 12ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:10:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 8ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:10:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:10:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:12:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 22ms (Views: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:13:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestiones {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestiones {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:13:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:13:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 2ms (Views: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:13:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    particpant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    particpant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 1ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 17:14:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 21:01:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 35ms (Views: 1.0ms | ActiveRecord: 3.8ms)


Started GET "/admin/quizzes/1" for 127.0.0.1 at 2018-11-29 22:59:56 -0600
Processing by Admin::QuizzesController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mAdminUser Load (1.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" WHERE "quizzes"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb
  [1m[35m (3.0ms)[0m  [1m[34mSELECT COUNT(*) FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ?[0m  [["resource_type", "Quiz"], ["namespace", "admin"]]
  [1m[36mActiveAdmin::Comment Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "active_admin_comments" WHERE "active_admin_comments"."resource_type" = ? AND "active_admin_comments"."resource_id" = 1 AND "active_admin_comments"."namespace" = ? LIMIT ? OFFSET ?[0m  [["resource_type", "Quiz"], ["namespace", "admin"], ["LIMIT", 1], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/show.html.arb (2088.9ms)
Completed 200 OK in 2948ms (Views: 2442.3ms | ActiveRecord: 40.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 23:00:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 103ms (Views: 31.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-29 23:13:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions {\n    position\n    \n  }\n}\n", "variables"=>nil, "operationName"=>nil}}
  [1m[36mQuestion Load (4.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 65ms (Views: 1.6ms | ActiveRecord: 7.2ms)


Started OPTIONS "/graphql" for 127.0.0.1 at 2018-11-29 23:54:51 -0600
  [1m[35m (1.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActionController::RoutingError (No route matches [OPTIONS] "/graphql"):
  
actionpack (5.1.5) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
web-console (3.5.1) lib/web_console/middleware.rb:135:in `call_app'
web-console (3.5.1) lib/web_console/middleware.rb:28:in `block in call'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `catch'
web-console (3.5.1) lib/web_console/middleware.rb:18:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.5) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.5) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.5) lib/rails/rack/logger.rb:24:in `call'
sprockets-rails (3.2.1) lib/sprockets/rails/quiet_assets.rb:13:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/method_override.rb:22:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.5) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.5) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
webpacker (3.4.0) lib/webpacker/dev_server_proxy.rb:18:in `perform_request'
rack-proxy (0.6.4) lib/rack/proxy.rb:57:in `call'
railties (5.1.5) lib/rails/engine.rb:522:in `call'
puma (3.11.3) lib/puma/configuration.rb:225:in `call'
puma (3.11.3) lib/puma/server.rb:624:in `handle_request'
puma (3.11.3) lib/puma/server.rb:438:in `process_client'
puma (3.11.3) lib/puma/server.rb:302:in `block in run'
puma (3.11.3) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:03:58 -0600
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 96ms (Views: 2.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:08:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 75ms (Views: 8.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:08:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 211ms (Views: 21.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:08:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 128ms (Views: 23.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:09:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 60ms (Views: 12.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:09:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:10:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:10:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:22:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 4.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:23:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:26:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:26:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:27:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:27:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:27:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 1.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:28:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.0ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:28:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:29:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 2.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:30:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 3.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:30:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:31:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 5.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:31:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 4.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:32:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.0ms | ActiveRecord: 0.6ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-30 00:33:22 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (1.8ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (906.2ms)
Completed 200 OK in 1030ms (Views: 936.0ms | ActiveRecord: 4.0ms)


Started POST "/admin/questions/batch_action" for 127.0.0.1 at 2018-11-30 00:33:48 -0600
Processing by Admin::QuestionsController#batch_action as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"MI7VH1jY1pKGWqswYVL3cScEHbI6uEIW8U2ymMAGnACqK5yFM96VULiAYnuYTjJxsVH7vIqArIQq3usF9g0LUA==", "batch_action"=>"destroy", "batch_action_inputs"=>"{}", "collection_selection"=>["8", "7", "6", "5"]}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."id" IN (8, 7, 6, 5)[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 8]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 7]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 6]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 5]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Redirected to http://localhost:3000/admin/questions
Completed 302 Found in 21ms (ActiveRecord: 7.9ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-11-30 00:33:48 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (337.3ms)
Completed 200 OK in 364ms (Views: 359.6ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:34:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 4.6ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:35:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:35:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:36:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:36:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:42:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:43:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 00:45:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 09:58:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (16.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 116ms (Views: 8.8ms | ActiveRecord: 16.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 10:06:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 1.0ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 10:28:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 69ms (Views: 3.1ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 18:55:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (20.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 94ms (Views: 4.1ms | ActiveRecord: 20.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 18:57:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:01:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 3.9ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:02:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 0.9ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:02:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.7ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:04:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:05:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 5.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:07:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.4ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:08:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 11.8ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:09:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 58ms (Views: 7.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:09:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 9.8ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:12:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 84ms (Views: 19.0ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:12:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 39ms (Views: 7.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:13:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 3.9ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:15:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 3.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:18:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 6.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:49:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 117ms (Views: 5.5ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:50:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 2.9ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:51:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 4.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:53:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 59ms (Views: 7.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:56:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 4.8ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:58:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 79ms (Views: 16.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 19:59:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 56ms (Views: 22.7ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:04:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 32ms (Views: 3.9ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:05:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:09:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:11:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:12:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 4.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:24:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 137ms (Views: 5.5ms | ActiveRecord: 7.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:27:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 2.4ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:27:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 37ms (Views: 14.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:29:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 5.5ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:35:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 6.8ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-11-30 20:43:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (20.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 536ms (Views: 68.5ms | ActiveRecord: 20.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:12:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (10.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 145ms (Views: 11.4ms | ActiveRecord: 10.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:12:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 5.8ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:13:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:13:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 2.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:15:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 8.3ms | ActiveRecord: 0.6ms)


Started GET "/" for 127.0.0.1 at 2018-12-02 12:16:54 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (14.8ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1553ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___108235042596470782_70186655806680'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:17:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 1.7ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:18:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 55ms (Views: 2.7ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:19:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:19:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:21:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 3.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:24:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 8.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:24:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 150ms (Views: 1.8ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 12:26:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.2ms | ActiveRecord: 0.7ms)


Started GET "/" for 127.0.0.1 at 2018-12-02 12:49:57 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (28.5ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 4052ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___108235042596470782_70186656772640'
Started GET "/" for 127.0.0.1 at 2018-12-02 12:50:55 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (0.5ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1022ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___108235042596470782_70186655609620'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:01:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 63ms (Views: 4.1ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:02:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:03:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:03:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:03:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 107ms (Views: 1.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:04:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:06:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:06:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:07:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:10:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:11:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:12:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:12:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:14:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:14:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:14:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:19:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 89ms (Views: 3.9ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 13:20:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:29:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 11ms


  
NameError (uninitialized constant Types::MutationType):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:30:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 1ms


  
NameError (uninitialized constant Types::MutationType):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 14:33:27 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (794.0ms)
Completed 200 OK in 829ms (Views: 823.7ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 14:33:30 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (16.3ms)
Completed 200 OK in 54ms (Views: 47.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:33:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::MutationType):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-02 20:37:49.466660"], ["updated_at", "2018-12-02 20:37:49.466660"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-02 20:37:49.471450"], ["updated_at", "2018-12-02 20:37:49.471450"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-02 20:37:49.475210"], ["updated_at", "2018-12-02 20:37:49.475210"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-02 20:37:49.480712"], ["updated_at", "2018-12-02 20:37:49.480712"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (1.0ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Started GET "/admin/questions" for 127.0.0.1 at 2018-12-02 14:38:33 -0600
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (910.5ms)
Completed 200 OK in 995ms (Views: 952.8ms | ActiveRecord: 2.9ms)


Started POST "/admin/questions/batch_action" for 127.0.0.1 at 2018-12-02 14:38:54 -0600
Processing by Admin::QuestionsController#batch_action as HTML
  Parameters: {"utf8"=>"âœ“", "authenticity_token"=>"ZSlN/AhBbS4pipraraKzq7ZK/dw5xOmlSzZJKjS0eT//jARmY0cu7BdQU5FUvnarIB8b0on8BzeQpRC3Ar/ubw==", "batch_action"=>"destroy", "batch_action_inputs"=>"{}", "collection_selection"=>["8", "7", "6", "5"]}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" WHERE "questions"."id" IN (8, 7, 6, 5)[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 8]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 7]]
  [1m[35m (2.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.8ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 6]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "questions" WHERE "questions"."id" = ?[0m  [["id", 5]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Redirected to http://localhost:3000/admin/questions
Completed 302 Found in 29ms (ActiveRecord: 13.0ms)


Started GET "/admin/questions" for 127.0.0.1 at 2018-12-02 14:38:54 -0600
Processing by Admin::QuestionsController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "questions"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "questions" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT  "questions".* FROM "questions" ORDER BY "questions"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (269.7ms)
Completed 200 OK in 301ms (Views: 296.3ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:39:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  \n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  \n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 5ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Types::MutationType):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:41:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions{\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions{\n    \n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 2ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
    resolve ->(_, _, _)
                       ^):
  
app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:41:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions{\n   position\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions{\n   position\n    \n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 3ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
    resolve ->(_, _, _)
                       ^):
  
app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:48:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 160ms (Views: 2.3ms | ActiveRecord: 36.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:48:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuestions{\n   position\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  ListQuestions{\n   position\n    \n  }\n}\n", "variables"=>nil}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:50:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:50:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:50:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:50:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:51:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:51:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 1ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:54:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 12ms (Views: 2.3ms | ActiveRecord: 0.0ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-02 14:54:43 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.7ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (1.6ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.7ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (1119.5ms)
Completed 200 OK in 1321ms (Views: 1161.4ms | ActiveRecord: 7.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:56:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 500 Internal Server Error in 4ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
    resolve ->(_, _, _)
                       ^):
  
app/graphql/types/mutation_type.rb:6: syntax error, unexpected '\n', expecting keyword_do_LAMBDA or tLAMBEG
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 14:59:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 34ms (Views: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:00:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz{\n   participant_name: \"Dylan Russell\"\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 16ms (Views: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:04:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz(participant_name: \"Dylan Russell\")\n    \n  }\n}\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz(participant_name: \"Dylan Russell\")\n    \n  }\n}\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:05:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz(participant_name: \"Dylan Russell\")\n    \n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz(participant_name: \"Dylan Russell\")\n    \n}\n\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:05:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  CreateQuiz\n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  CreateQuiz\n}\n\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:13:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  Mutation CreateQuiz(participant_name)\n  \n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  Mutation CreateQuiz(participant_name)\n  \n}\n\n", "variables"=>nil}}
Completed 200 OK in 13ms (Views: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:13:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  Mutation CreateQuiz(participant_name)\n  \n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  Mutation CreateQuiz(participant_name)\n  \n}\n\n", "variables"=>nil}}
Completed 200 OK in 3ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:14:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  Mutation CreateQuiz(participant_name: \"Dylan\")\n  \n}\n\n", "variables"=>nil, "graphql"=>{"query"=>"{\n  Mutation CreateQuiz(participant_name: \"Dylan\")\n  \n}\n\n", "variables"=>nil}}
Completed 200 OK in 7ms (Views: 0.9ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 15:18:07 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (138.7ms)
Completed 200 OK in 218ms (Views: 193.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:18:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 15:18:10 -0600
Completed 200 OK in 88ms (Views: 16.9ms)


Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (31.2ms)
Completed 200 OK in 67ms (Views: 61.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:18:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 127ms (Views: 42.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:18:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz {\n  participant_name: \"Dylan\") \n\n}\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz {\n  participant_name: \"Dylan\") \n\n}\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 1ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:20:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz(\n  \n)", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz(\n  \n)", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 2ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:26:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan Russell\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan Russell\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 20ms (Views: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:27:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan Russell\") {\n    answers\n    participant_name: \n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan Russell\") {\n    answers\n    participant_name: \n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 4ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:28:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name: \"DylanRussell\"\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name: \"DylanRussell\"\n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:28:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil}}
  [1m[35m (1.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 500 Internal Server Error in 95ms (ActiveRecord: 5.4ms)


  
NoMethodError (undefined method `each' for #<Quiz:0x00007fe8dfb26018>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:30:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan\") {\n    answers\n    \n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(participant_name: \"Dylan\") {\n    answers\n    \n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:38:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 22ms (Views: 3.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:39:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\") {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil}}
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 15:50:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil, "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>nil}}
  [1m[35m (0.6ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 500 Internal Server Error in 36ms (ActiveRecord: 0.7ms)


  
NoMethodError (undefined method `each' for #<Quiz:0x00007fe8de005bd0>):
  
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:00:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation Create($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"Create", "graphql"=>{"query"=>"\nmutation Create($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"Create"}}
Completed 200 OK in 7ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:00:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 7ms (Views: 1.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:00:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:02:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:02:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:05:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:09:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 63ms (Views: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:10:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 12ms


  
NameError (uninitialized constant Types::MutationType):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:10:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 17ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:10:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name: $participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:10:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n    answers\n    participant_name\n    score\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 2ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:11:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 4ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:11:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 4ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:15:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 3ms


  
GraphQL::Define::NoDefinitionError (GraphQL::Schema can't define 'field'):
  
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:15:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 39ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:16:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($participant_name: String) {\n    CreateQuiz(participant_name: $participant_name) {\n    answers\n    participant_name\n    score\n  }\n} \n\n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:30:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  __schema\n}\nmutation CreateQuiz($participant_name: String): [Quiz]! \n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"{\n  __schema\n}\nmutation CreateQuiz($participant_name: String): [Quiz]! \n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 50ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:30:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  __schema\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n  __schema\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "operationName"=>nil}}
Completed 200 OK in 3ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:34:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(participant_name: $participant_name) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(participant_name: $participant_name) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}}}
Completed 200 OK in 4ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:35:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input{participant_name: $participant_name)} {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input{participant_name: $participant_name)} {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}}}
Completed 200 OK in 1ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:36:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"participant_name"=>"Dylan"}}}
Completed 200 OK in 2ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 2ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 2ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 2ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 3ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(args: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"args"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(args: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"args"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 3ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(args: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"args"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(args: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"args"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 9ms (Views: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 3ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 3ms (Views: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:40:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(model: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"model"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 7ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:41:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"mutation {\n\tCreateQuiz(input: { participant_name: $participant_name}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 3ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:42:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"$input: MutationInput!\nmutation CreateUser($input: MutationInput!) {\n  createUser(input: $input)\n}\n\nmutation {\n\tCreateQuiz($input: MutationInput!}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"$input: MutationInput!\nmutation CreateUser($input: MutationInput!) {\n  createUser(input: $input)\n}\n\nmutation {\n\tCreateQuiz($input: MutationInput!}) {\n\t  answers\n\t  participant_name\n\t  score\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 1ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:43:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!}) {\n    createQuiz(input: $input)\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!}) {\n    createQuiz(input: $input)\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 1ms (Views: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:43:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n    createQuiz(input: $input)\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n    createQuiz(input: $input)\n\t}\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}}}
Completed 200 OK in 5ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:44:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 2ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 16:45:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 8ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/mutation_type.rb:4: syntax error, unexpected ':', expecting '}'
    participant_name: String!
                    ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/mutation_type.rb:17: syntax error, unexpected keyword_end, expecting end-of-input):
  
app/graphql/types/mutation_type.rb:4: syntax error, unexpected ':', expecting '}'
app/graphql/types/mutation_type.rb:17: syntax error, unexpected keyword_end, expecting end-of-input
app/graphql/cohub_code_challenge_schema.rb:2:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:15:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 11ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:2: syntax error, unexpected ':', expecting keyword_end
  mutation: RootMutation
          ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:7: syntax error, unexpected ':', expecting end-of-input
...ut: ToggleQuizCompletedInput!): ToggleQuizCompletedPayload
...                              ^):
  
app/graphql/cohub_code_challenge_schema.rb:2: syntax error, unexpected ':', expecting keyword_end
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:7: syntax error, unexpected ':', expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:16:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 24ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:2: syntax error, unexpected ':', expecting keyword_end
  mutation: RootMutation
          ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^):
  
app/graphql/cohub_code_challenge_schema.rb:2: syntax error, unexpected ':', expecting keyword_end
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:20:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 19ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
  input: {participant_name: String!, ...
       ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected '}'
...ng!, score: String!, answers: }
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:18: syntax error, unexpected ':', expecting '}'
  quiz: Quiz
      ^):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected '}'
app/graphql/cohub_code_challenge_schema.rb:18: syntax error, unexpected ':', expecting '}'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:22:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 11ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
  input: {participant_name: String!, ...
       ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 17:22:28 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 17:22:31 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (356.4ms)
Completed 200 OK in 720ms (Views: 696.1ms)


  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (404.2ms)
Completed 200 OK in 867ms (Views: 840.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-02 17:22:35 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (176.5ms)
Completed 200 OK in 440ms (Views: 418.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:22:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 500 Internal Server Error in 6ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
  input: {participant_name: String!, ...
       ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 17:23:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 4ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
  input: {participant_name: String!, ...
       ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 22:44:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 25ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
  input: {participant_name: String!, ...
       ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:14: syntax error, unexpected '}', expecting end-of-input
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 22:46:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 2ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:18: syntax error, unexpected ':', expecting '}'
  quiz: Quiz
      ^):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:18: syntax error, unexpected ':', expecting '}'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 22:49:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 3ms


  
SyntaxError (/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
...eQuiz(input: CreateQuizInput!): CreateQuizPayload
...                              ^
/Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
    participant_name: String!
                    ^):
  
app/graphql/cohub_code_challenge_schema.rb:6: syntax error, unexpected ':', expecting '}'
app/graphql/cohub_code_challenge_schema.rb:13: syntax error, unexpected ':', expecting '}'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 23:03:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 30ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 23:04:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz($input: MutationInput!) {\n  createQuiz(input: $input)\n}\n\n    \n\n", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 13ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 23:07:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  )}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  )}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 17ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 23:09:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 1ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-02 23:14:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 50ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:27:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 14ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:28:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 12ms


  
LoadError (Unable to autoload constant Types::Quiz, expected /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/app/graphql/types/quiz.rb to define it):
  
app/graphql/types/query_type.rb:10:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:29:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 18ms


  
NameError (uninitialized constant Types::QuizType):
  
app/graphql/resolvers/create_quiz.rb:7:in `<class:CreateQuiz>'
app/graphql/resolvers/create_quiz.rb:1:in `<top (required)>'
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:29:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 12ms


  
RuntimeError (Duplicate type definition found for name 'Quiz'):
  
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:29:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 35ms (Views: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:30:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  CreateQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 2ms (Views: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:30:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 2ms (Views: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:36:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 19ms (Views: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:40:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "string"], ["participant_name", "Dylan"], ["created_at", "2018-12-03 18:40:15.899961"], ["updated_at", "2018-12-03 18:40:15.899961"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 90ms (Views: 0.3ms | ActiveRecord: 25.1ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 12:40:29 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (1.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (357.9ms)
Completed 200 OK in 445ms (Views: 384.4ms | ActiveRecord: 3.2ms)


Started GET "/" for 127.0.0.1 at 2018-12-03 12:49:59 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (4.7ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1370ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb__162766406508873314_70319035573020'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 12:50:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 96ms (Views: 1.5ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:16:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (8.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 236ms (Views: 9.4ms | ActiveRecord: 19.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:17:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:22:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 185ms (Views: 28.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:25:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 1.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:25:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:29:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:29:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.7ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:30:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:32:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 4.9ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:32:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 13:33:39 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (1.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (672.6ms)
Completed 200 OK in 870ms (Views: 717.2ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:33:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 110ms (Views: 18.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:34:54 -0600
Completed 200 OK in 72ms (Views: 15.7ms | ActiveRecord: 0.0ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 92ms (Views: 13.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:35:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:35:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 3.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:38:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:38:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:40:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:40:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:42:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:42:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:50:54 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:50:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  [1m[36mQuestion Load (5.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 200 OK in 171ms (Views: 6.4ms | ActiveRecord: 5.0ms)


  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 42ms (Views: 3.1ms | ActiveRecord: 8.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:54:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.9ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:55:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 3.1ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:56:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 13:56:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:04:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 71ms (Views: 10.6ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:04:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 3.6ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:04:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (11.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 222ms (Views: 182.8ms | ActiveRecord: 11.8ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:05:37 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.8ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (362.2ms)
Completed 200 OK in 408ms (Views: 393.5ms | ActiveRecord: 1.7ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:05:40 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (291.6ms)
Completed 200 OK in 319ms (Views: 314.7ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:06:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:07:11 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.7ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (264.8ms)
Completed 200 OK in 290ms (Views: 284.1ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:08:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.7ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:09:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:09:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 18.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:11:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:11:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:11:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:11:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:12:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 9.8ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:12:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:12:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.7ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:12:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:13:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:13:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:14:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:14:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.6ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:16:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:16:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:21:39 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 237ms (Views: 3.3ms | ActiveRecord: 2.6ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:22:29 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.6ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (878.6ms)
Completed 200 OK in 973ms (Views: 906.7ms | ActiveRecord: 3.2ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:22:35 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (1.9ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (343.1ms)
Completed 200 OK in 371ms (Views: 362.5ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:23:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:23:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:24:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:24:49 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.8ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (418.4ms)
Completed 200 OK in 455ms (Views: 438.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:30:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 76ms (Views: 3.1ms | ActiveRecord: 3.9ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:30:31 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.5ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.5ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (331.8ms)
Completed 200 OK in 354ms (Views: 347.3ms | ActiveRecord: 1.9ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:30:37 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.2ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (246.9ms)
Completed 200 OK in 274ms (Views: 270.1ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:31:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:31:17 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (1.1ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (486.8ms)
Completed 200 OK in 520ms (Views: 515.0ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:32:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:34:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\nmutation CreateQuiz {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"\nmutation CreateQuiz {\n  createQuiz(\n    participant_name: \"Dylan\",\n    answers: \"string\"\n  ) {\n  \tparticipant_name\n    answers\n  }\n}\n\n    \n\n", "variables"=>nil, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (35.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "string"], ["participant_name", "Dylan"], ["created_at", "2018-12-03 20:34:02.874550"], ["updated_at", "2018-12-03 20:34:02.874550"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 56ms (Views: 0.3ms | ActiveRecord: 37.4ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:34:21 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (1.0ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (356.3ms)
Completed 200 OK in 419ms (Views: 403.2ms | ActiveRecord: 1.8ms)


Started DELETE "/admin/quizzes/3" for 127.0.0.1 at 2018-12-03 14:34:28 -0600
Processing by Admin::QuizzesController#destroy as HTML
  Parameters: {"authenticity_token"=>"1GHixwPjibRYmGlOzFSO7BRWc6JeexmtI8tQYPBeFRxOxKtdaOXKdmZCoAU1SEvsggOVrO5D9z/4WAn9xlWCTA==", "id"=>"3"}
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mQuiz Load (0.9ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" WHERE "quizzes"."id" = ? LIMIT ?[0m  [["id", 3], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[31mDELETE FROM "quizzes" WHERE "quizzes"."id" = ?[0m  [["id", 3]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Redirected to http://localhost:3000/admin/quizzes
Completed 302 Found in 117ms (ActiveRecord: 3.6ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 14:34:28 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (0.3ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.2ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (239.3ms)
Completed 200 OK in 270ms (Views: 263.9ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:34:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.1ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-03 14:36:12 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (149.7ms)
Completed 200 OK in 195ms (Views: 186.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:36:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 68ms (Views: 14.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:36:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}", "variables"=>{"input"=>{"participant_name"=>"Dylan"}}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:37:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}", "variables"=>nil, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"{\n  ListQuizzes {\n    participant_name\n  }\n}", "variables"=>nil, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 1ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-03 14:37:21 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (115.8ms)
Completed 200 OK in 171ms (Views: 163.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:40:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 54ms (Views: 3.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:41:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:48:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:50:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:51:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:51:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:52:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:52:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:53:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:58:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 1.0ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:58:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 14:59:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:03:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:03:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 1.1ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:04:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 4.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:05:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 9.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:07:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 7.7ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:07:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"type"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"type"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 1.0ms | ActiveRecord: 0.0ms)


Started GET "/admin/quizzes" for 127.0.0.1 at 2018-12-03 15:08:38 -0600
Processing by Admin::QuizzesController#index as HTML
  [1m[36mAdminUser Load (3.8ms)[0m  [1m[34mSELECT  "admin_users".* FROM "admin_users" WHERE "admin_users"."id" = ? ORDER BY "admin_users"."id" ASC LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "quizzes"[0m
  [1m[35mCACHE  (0.0ms)[0m  [1m[34mSELECT COUNT(*) FROM (SELECT  1 AS one FROM "quizzes" LIMIT ? OFFSET ?) subquery_for_count[0m  [["LIMIT", 30], ["OFFSET", 0]]
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT  "quizzes".* FROM "quizzes" ORDER BY "quizzes"."id" desc LIMIT ? OFFSET ?[0m  [["LIMIT", 30], ["OFFSET", 0]]
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/activeadmin-1.4.2/app/views/active_admin/resource/index.html.arb (556.1ms)
Completed 200 OK in 657ms (Views: 599.8ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:10:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"type"=>"Ra"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"type"=>"Ra"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:11:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.8ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:11:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"type"=>"r"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"type"=>"r"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:14:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:14:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:15:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"type"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"type"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:16:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:16:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:16:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.0ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:16:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:18:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 2.3ms | ActiveRecord: 0.6ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-03 15:18:14 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (76.7ms)
Completed 200 OK in 148ms (Views: 135.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:18:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 123ms (Views: 24.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:19:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    quiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    quiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:21:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 15ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:21:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name) {\n    id\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name) {\n    id\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 5ms (Views: 1.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:21:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:21:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:22:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:24:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:24:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  quiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:25:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:25:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "R"], ["participant_name", "R"], ["created_at", "2018-12-03 21:25:18.317837"], ["updated_at", "2018-12-03 21:25:18.317837"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 0.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:25:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "R"], ["participant_name", "R"], ["created_at", "2018-12-03 21:25:20.918425"], ["updated_at", "2018-12-03 21:25:20.918425"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:25:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"R", "answers"=>"R"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "R"], ["participant_name", "R"], ["created_at", "2018-12-03 21:25:27.251577"], ["updated_at", "2018-12-03 21:25:27.251577"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:25:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil, "graphql"=>{"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:26:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:27:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 77ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:27:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:28:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:29:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:29:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:35:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 106ms (Views: 3.9ms | ActiveRecord: 7.7ms)


Started GET "/" for 127.0.0.1 at 2018-12-03 15:44:27 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (11.1ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1415ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___2080499446545573239_70352744797520'
Started GET "/" for 127.0.0.1 at 2018-12-03 15:44:54 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (0.5ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1324ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___2080499446545573239_70352737578940'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:45:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 2.6ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:45:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "a"], ["created_at", "2018-12-03 21:45:51.335981"], ["updated_at", "2018-12-03 21:45:51.335981"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 22ms (Views: 0.5ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:46:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "a"], ["created_at", "2018-12-03 21:46:07.212777"], ["updated_at", "2018-12-03 21:46:07.212777"]]
  [1m[35m (2.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:46:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "a"], ["created_at", "2018-12-03 21:46:07.957714"], ["updated_at", "2018-12-03 21:46:07.957714"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:46:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "a"], ["created_at", "2018-12-03 21:46:09.975773"], ["updated_at", "2018-12-03 21:46:09.975773"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:46:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:47:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:52:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 5.1ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:53:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:53:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:54:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 0.8ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:54:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.4ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:54:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:56:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.6ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:56:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:58:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 15:59:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:01:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 49ms (Views: 3.6ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:01:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:02:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:03:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:03:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 9.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:06:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:11:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 49ms (Views: 2.9ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:11:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:12:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:13:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:18:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:20:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:20:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:21:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:21:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:24:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 6.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 16:24:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.5ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 7.0ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 8.0ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 3.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 76ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-03 23:38:52.459836"], ["updated_at", "2018-12-03 23:38:52.459836"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-03 23:38:58.964558"], ["updated_at", "2018-12-03 23:38:58.964558"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.4ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:38:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-03 23:38:59.788160"], ["updated_at", "2018-12-03 23:38:59.788160"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:39:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 2.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:39:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:43:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 136ms (Views: 52.9ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:43:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 4.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:46:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.6ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:46:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 17:47:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.8ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:30:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 4.8ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:31:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 3.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:32:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 3.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:34:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.5ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:35:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 54ms (Views: 4.8ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:35:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-04 00:35:37.430397"], ["updated_at", "2018-12-04 00:35:37.430397"]]
  [1m[35m (2.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 0.6ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:35:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-04 00:35:38.364655"], ["updated_at", "2018-12-04 00:35:38.364655"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 1.0ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:35:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Emily", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Emily", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Emily"], ["created_at", "2018-12-04 00:35:45.330063"], ["updated_at", "2018-12-04 00:35:45.330063"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.6ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:35:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil, "graphql"=>{"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 8ms (Views: 0.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:37:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Ambrasher", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Ambrasher", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Ambrasher"], ["created_at", "2018-12-04 00:37:13.454149"], ["updated_at", "2018-12-04 00:37:13.454149"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 34ms (Views: 0.3ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:37:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil, "graphql"=>{"query"=>"{\nListQuizzes{\n  participant_name\n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.7ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:38:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 98ms (Views: 6.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:41:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 200ms (Views: 7.1ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:42:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 2.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:43:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-04 00:43:37.132568"], ["updated_at", "2018-12-04 00:43:37.132568"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 20ms (Views: 0.3ms | ActiveRecord: 5.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:43:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\nListQuizzes{\n  participant_name\n  \n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil, "graphql"=>{"query"=>"{\nListQuizzes{\n  participant_name\n  \n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 18ms (Views: 1.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:44:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Billy", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Billy", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Billy"], ["created_at", "2018-12-04 00:44:14.623761"], ["updated_at", "2018-12-04 00:44:14.623761"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 0.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:44:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\nListQuizzes{\n  participant_name\n  \n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil, "graphql"=>{"query"=>"{\nListQuizzes{\n  participant_name\n  \n}}\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:46:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 21.5ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:46:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-04 00:46:59.688784"], ["updated_at", "2018-12-04 00:46:59.688784"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 1.9ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:47:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", ""], ["participant_name", "Randall"], ["created_at", "2018-12-04 00:47:01.582546"], ["updated_at", "2018-12-04 00:47:01.582546"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:49:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:51:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 3.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:52:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:52:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.0ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:53:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 13.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:56:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 3.7ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:58:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 8.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 18:59:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 3.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:01:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 6.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:02:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 67ms (Views: 5.0ms | ActiveRecord: 4.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:04:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 1.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:07:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 2.1ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:08:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.5ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:10:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 8.4ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:12:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 1.5ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:14:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 19:14:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:17:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 53ms (Views: 6.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:19:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 11.4ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:20:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 75ms (Views: 13.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:21:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 5.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:45:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 175ms (Views: 19.4ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:45:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 223ms (ActiveRecord: 0.5ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:47:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:47:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 31ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:47:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:54:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:56:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 22:59:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 85ms (Views: 9.2ms | ActiveRecord: 6.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:00:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 2.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:00:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:02:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:04:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:05:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:05:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:05:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:08:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 3.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:09:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:11:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 6ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:11:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!) {\n    createQuiz(participant_name: $participant_name) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!) {\n    createQuiz(participant_name: $participant_name) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:11:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!) {\n    createQuiz(participant_name: $participant_name) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!) {\n    createQuiz(participant_name: $participant_name) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo"}, "operationName"=>"CreateQuiz"}}
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:12:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-04 05:12:09.711426"], ["updated_at", "2018-12-04 05:12:09.711426"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 33ms (Views: 0.8ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:19:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 2.1ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:21:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 63ms (Views: 5.8ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 23ms (ActiveRecord: 0.6ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 40ms (ActiveRecord: 2.8ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 60ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:22:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:00 -0600
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 96ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 12ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:02 -0600
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 11ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:06 -0600
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 9ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 100ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 100ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:12 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 198ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:18 -0600
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:20 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:20 -0600
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:25 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:25 -0600
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.2ms)


Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:32 -0600
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
Completed 422 Unprocessable Entity in 16ms (ActiveRecord: 0.2ms)


  
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:41 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 94ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:45 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by GraphqlController#execute as */*
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 92ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:48 -0600
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.3ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 22ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 13ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:23:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 19ms (ActiveRecord: 0.2ms)


Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:07 -0600
  
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:09 -0600
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 101ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:20 -0600
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:27 -0600
Completed 422 Unprocessable Entity in 9ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:37 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 99ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:49 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:49 -0600
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 101ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 103ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:55 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


Processing by GraphqlController#execute as */*
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:24:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:09 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Processing by GraphqlController#execute as */*
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 124ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:16 -0600
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Processing by GraphqlController#execute as */*
Completed 422 Unprocessable Entity in 79ms (ActiveRecord: 0.2ms)


  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:19 -0600
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:25 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Processing by GraphqlController#execute as */*
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.3ms)


  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:33 -0600
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:35 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:43 -0600
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 9ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:49 -0600
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.7ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 11ms (ActiveRecord: 0.8ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:55 -0600
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:55 -0600
Processing by GraphqlController#execute as */*
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 236ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:25:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:26:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.9ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:26:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 5ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:26:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:26:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-04 05:26:53.901178"], ["updated_at", "2018-12-04 05:26:53.901178"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:28:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:28:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:28:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 8ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:30:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:33:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:33:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:35:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:37:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.6ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:38:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 0.9ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:39:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:39:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 17ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:40:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:40:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:40:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:43:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 53ms (Views: 3.5ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:45:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.4ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:45:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:50:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 94ms (Views: 7.4ms | ActiveRecord: 5.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:50:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 8ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:51:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.6ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:51:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 1.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:55:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.5ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:55:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:56:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:56:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:56:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:56:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:56:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:57:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:57:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:58:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.0ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:58:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 13ms (Views: 2.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:59:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.0ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-03 23:59:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 21ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:00:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 102ms (Views: 4.1ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:00:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:00:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:00:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.5ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:01:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:01:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 11ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:01:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 0.8ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:03:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:03:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 20ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:05:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 6ms (ActiveRecord: 0.1ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:07:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 3.6ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:10:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.2ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:21:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 64ms (Views: 4.2ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:22:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.7ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:23:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:23:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 2.8ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:28:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:32:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (8.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 3.3ms | ActiveRecord: 8.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:33:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 4.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:33:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.0ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:33:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 3.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:34:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:34:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:34:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:35:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:35:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:36:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.1ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:36:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:38:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.4ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:39:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:39:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:40:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 1.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:40:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 12ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:40:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:41:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:41:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:41:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 1.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:42:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:42:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:42:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 179ms (Views: 29.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:42:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n", "graphql"=>{"operationName"=>"IntrospectionQuery", "variables"=>{}, "query"=>"query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n    mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types {\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n    description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    ...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"}}
Completed 200 OK in 125ms (Views: 49.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:44:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:45:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 00:48:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:06:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 97ms (Views: 5.7ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:06:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 39ms (Views: 2.9ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:06:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 16ms (Views: 4.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:06:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 1.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:07:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 6.2ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:07:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 2.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:08:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 41ms (Views: 8.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:08:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 11ms (Views: 2.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:10:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 89ms (Views: 9.5ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:11:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:12:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 45ms (Views: 10.3ms | ActiveRecord: 6.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:12:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>""}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:12:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:13:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:14:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.7ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:14:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:14:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:15:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 124ms (Views: 9.8ms | ActiveRecord: 4.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:15:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (7.7ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "a"], ["participant_name", "a"], ["created_at", "2018-12-04 07:15:31.470224"], ["updated_at", "2018-12-04 07:15:31.470224"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 83ms (Views: 1.1ms | ActiveRecord: 11.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:15:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (3.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-04 07:15:48.969510"], ["updated_at", "2018-12-04 07:15:48.969510"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:16:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  ListQuizzes {\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n  ListQuizzes {\n    participant_name\n    answers\n  }\n}\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.1ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 54ms (Views: 14.0ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:20:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 63ms (Views: 3.7ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:20:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "a"], ["participant_name", "a"], ["created_at", "2018-12-04 07:20:30.621897"], ["updated_at", "2018-12-04 07:20:30.621897"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 35ms (Views: 1.6ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:21:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 2.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:21:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "b"], ["participant_name", "b"], ["created_at", "2018-12-04 07:21:03.495988"], ["updated_at", "2018-12-04 07:21:03.495988"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.7ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:21:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "b"], ["participant_name", "b"], ["created_at", "2018-12-04 07:21:04.471223"], ["updated_at", "2018-12-04 07:21:04.471223"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:21:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"b", "answers"=>"b"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "b"], ["participant_name", "b"], ["created_at", "2018-12-04 07:21:06.542923"], ["updated_at", "2018-12-04 07:21:06.542923"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 14ms (Views: 2.1ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:21:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:22:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "a"], ["participant_name", "a"], ["created_at", "2018-12-04 07:22:00.954382"], ["updated_at", "2018-12-04 07:22:00.954382"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.8ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:22:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "a"], ["participant_name", "a"], ["created_at", "2018-12-04 07:22:02.844152"], ["updated_at", "2018-12-04 07:22:02.844152"]]
  [1m[35m (11.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 0.3ms | ActiveRecord: 11.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:22:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 114ms (Views: 31.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:22:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"w", "answers"=>"w"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"w", "answers"=>"w"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "w"], ["participant_name", "w"], ["created_at", "2018-12-04 07:22:41.579113"], ["updated_at", "2018-12-04 07:22:41.579113"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:22:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"w", "answers"=>"w"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"w", "answers"=>"w"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "w"], ["participant_name", "w"], ["created_at", "2018-12-04 07:22:42.868320"], ["updated_at", "2018-12-04 07:22:42.868320"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 15ms (Views: 1.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:26:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 151ms (Views: 27.1ms | ActiveRecord: 5.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:26:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 37ms (Views: 3.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:26:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 4.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:27:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:28:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 7.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:28:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 15ms (Views: 3.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:29:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 10.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:29:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s", "answers"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s", "answers"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "s"], ["participant_name", "s"], ["created_at", "2018-12-04 07:29:22.331165"], ["updated_at", "2018-12-04 07:29:22.331165"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:31:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.0ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:32:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 0.9ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:50:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 115ms (Views: 10.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:50:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 70ms (Views: 24.8ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:50:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 34ms (Views: 1.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:52:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 78ms (Views: 3.9ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:52:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 36ms (Views: 3.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:53:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 46ms (Views: 6.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:53:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 73ms (Views: 5.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:54:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 43ms


  
NoMethodError (undefined method `Object' for #<GraphQL::Define::TypeDefiner:0x00007ff887a186f0>
Did you mean?  object_id):
  
app/graphql/types/quiz_type.rb:5:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:56:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
Completed 500 Internal Server Error in 0ms


  
NoMethodError (undefined method `Object' for #<GraphQL::Define::TypeDefiner:0x00007ff887a186f0>
Did you mean?  object_id):
  
app/graphql/types/quiz_type.rb:5:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:57:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (3.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-04 07:57:29.467570"], ["updated_at", "2018-12-04 07:57:29.467570"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 265ms (Views: 0.9ms | ActiveRecord: 21.4ms)


Started GET "/" for 127.0.0.1 at 2018-12-04 01:58:35 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (0.7ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 1805ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___2080499446545573239_70352764790580'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 01:58:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 41ms (Views: 1.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:00:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:00:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:01:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.6ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:01:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:02:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 1.7ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:02:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:03:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 3.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:04:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:05:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:06:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:06:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:07:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:09:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 3.9ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:10:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.4ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:10:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.6ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:10:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:11:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 2.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:11:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:11:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:12:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }\n", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-04 08:12:05.023808"], ["updated_at", "2018-12-04 08:12:05.023808"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 21ms (Views: 0.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:12:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 20ms (Views: 7.1ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:13:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 3.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:13:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:14:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:15:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 1.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:15:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 08:15:43.716288"], ["updated_at", "2018-12-04 08:15:43.716288"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 1.0ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:15:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:16:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 08:16:02.589599"], ["updated_at", "2018-12-04 08:16:02.589599"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:16:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 6.8ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 02:16:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 08:16:27.423525"], ["updated_at", "2018-12-04 08:16:27.423525"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 1.8ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:09:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (13.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 101ms (Views: 8.3ms | ActiveRecord: 13.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:09:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:09:37.165609"], ["updated_at", "2018-12-04 14:09:37.165609"]]
  [1m[35m (2.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 32ms (Views: 0.5ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:10:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 5.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:10:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:10:13.088156"], ["updated_at", "2018-12-04 14:10:13.088156"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 19ms (Views: 1.6ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:10:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (11.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 131ms (Views: 18.8ms | ActiveRecord: 11.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:10:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:10:43.299426"], ["updated_at", "2018-12-04 14:10:43.299426"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 37ms (Views: 5.4ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:16:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (22.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 206ms (Views: 28.2ms | ActiveRecord: 22.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:16:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 39ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:17:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 53ms (Views: 11.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:17:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 19ms (Views: 5.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:18:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 68ms (Views: 21.6ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:18:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 29ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:23:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 131ms (Views: 19.6ms | ActiveRecord: 4.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:24:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (11.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 48ms (Views: 10.5ms | ActiveRecord: 11.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:24:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 17ms (Views: 1.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:25:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (22.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 1.3ms | ActiveRecord: 22.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:25:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 1.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:26:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 11.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:26:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 3.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:28:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 76ms (Views: 9.9ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:29:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 2.5ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:30:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 8.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:30:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>{}}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 15ms (Views: 3.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:31:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 37ms (Views: 10.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:31:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:31:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (12.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 376ms (Views: 31.1ms | ActiveRecord: 12.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:31:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:31:38.913615"], ["updated_at", "2018-12-04 14:31:38.913615"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 42ms (Views: 5.2ms | ActiveRecord: 6.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:32:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 3.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:32:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:32:04.860424"], ["updated_at", "2018-12-04 14:32:04.860424"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:32:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 3.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:33:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 8.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:34:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 45ms (Views: 1.5ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:35:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 10.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:35:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:35:10.610060"], ["updated_at", "2018-12-04 14:35:10.610060"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:35:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (7.8ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 59ms (Views: 9.8ms | ActiveRecord: 7.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:35:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 5.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:36:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 4.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:36:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:37:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 58ms (Views: 24.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:37:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 16ms (Views: 1.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:39:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 11.3ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:39:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 18ms (Views: 2.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:42:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 10.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:42:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 8.4ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:42:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 1.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:43:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 45ms (Views: 7.9ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:43:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 5.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:43:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:43:20.870512"], ["updated_at", "2018-12-04 14:43:20.870512"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 35ms (Views: 2.4ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:43:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 7.2ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:43:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:43:59.653750"], ["updated_at", "2018-12-04 14:43:59.653750"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 24ms (Views: 1.5ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:44:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 202ms (Views: 0.7ms | ActiveRecord: 62.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:44:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:44:39.360691"], ["updated_at", "2018-12-04 14:44:39.360691"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 26ms (Views: 0.4ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:45:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:45:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:45:16.614798"], ["updated_at", "2018-12-04 14:45:16.614798"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:46:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:46:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.3ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:46:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:46:45.777739"], ["updated_at", "2018-12-04 14:46:45.777739"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 36ms (Views: 0.5ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:47:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:47:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:47:12.330357"], ["updated_at", "2018-12-04 14:47:12.330357"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:51:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 32ms (Views: 2.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:51:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:51:36.362190"], ["updated_at", "2018-12-04 14:51:36.362190"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 27ms (Views: 1.3ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:52:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:52:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:52:23.586252"], ["updated_at", "2018-12-04 14:52:23.586252"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:53:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 175ms (Views: 2.1ms | ActiveRecord: 5.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:53:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:53:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:55:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 64ms (Views: 4.5ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:56:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.1ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:56:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:58:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 5.8ms | ActiveRecord: 6.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:58:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (6.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 14:58:51.326295"], ["updated_at", "2018-12-04 14:58:51.326295"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 95ms (Views: 0.4ms | ActiveRecord: 10.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 08:59:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:00:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:00:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.1ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:00:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:00:55.964142"], ["updated_at", "2018-12-04 15:00:55.964142"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.6ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:01:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:01:13.440760"], ["updated_at", "2018-12-04 15:01:13.440760"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.6ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:01:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:02:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:02:05.654369"], ["updated_at", "2018-12-04 15:02:05.654369"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.5ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:03:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:04:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.0ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:04:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:04:49.958368"], ["updated_at", "2018-12-04 15:04:49.958368"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 31ms (Views: 0.6ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:05:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 240ms (Views: 1.5ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:05:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:05:30.105977"], ["updated_at", "2018-12-04 15:05:30.105977"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.7ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:05:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 4.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:05:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:05:59.301674"], ["updated_at", "2018-12-04 15:05:59.301674"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 1.2ms | ActiveRecord: 3.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:06:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 4.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:06:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:06:51.717574"], ["updated_at", "2018-12-04 15:06:51.717574"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:07:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:07:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:07:10.026166"], ["updated_at", "2018-12-04 15:07:10.026166"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:07:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:07:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:07:30.794608"], ["updated_at", "2018-12-04 15:07:30.794608"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 24ms (Views: 0.5ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:08:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:08:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"q"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"q"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "q"], ["participant_name", "q"], ["created_at", "2018-12-04 15:08:16.070918"], ["updated_at", "2018-12-04 15:08:16.070918"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:09:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:09:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:09:19.669480"], ["updated_at", "2018-12-04 15:09:19.669480"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 15ms (Views: 1.0ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:11:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:13:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 3.8ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:13:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:13:11.711478"], ["updated_at", "2018-12-04 15:13:11.711478"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 30ms (Views: 1.0ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:13:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:13:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:13:51.009390"], ["updated_at", "2018-12-04 15:13:51.009390"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:14:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:14:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:14:30.519315"], ["updated_at", "2018-12-04 15:14:30.519315"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.5ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:14:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:15:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "Amber"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:15:02.299028"], ["updated_at", "2018-12-04 15:15:02.299028"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.7ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:15:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.7ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 13ms (Views: 3.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:16:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:16:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:16:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:17:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"q"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"q"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "q"], ["participant_name", "q"], ["created_at", "2018-12-04 15:17:02.060379"], ["updated_at", "2018-12-04 15:17:02.060379"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:17:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:17:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Javascript\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Javascript\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Javascript\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:17:55.157091"], ["updated_at", "2018-12-04 15:17:55.157091"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:18:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 30ms (Views: 4.7ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:18:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:18:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"[object Object]"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"[object Object]"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "[object Object]"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:18:55.869442"], ["updated_at", "2018-12-04 15:18:55.869442"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.8ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:19:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.9ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 23ms (Views: 9.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:19:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:20:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.1ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:21:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 1.3ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:21:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:21:44.228053"], ["updated_at", "2018-12-04 15:21:44.228053"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 22ms (Views: 0.5ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:23:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 4.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:23:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"aa", "answers"=>"{\"participant_name\":\"aa\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"aa", "answers"=>"{\"participant_name\":\"aa\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"aa\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"], ["participant_name", "aa"], ["created_at", "2018-12-04 15:23:18.640560"], ["updated_at", "2018-12-04 15:23:18.640560"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:23:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.1ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 32ms (Views: 10.6ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:24:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 3.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:24:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"1\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"1\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"1\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:24:56.796841"], ["updated_at", "2018-12-04 15:24:56.796841"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 24ms (Views: 3.9ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:25:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (3.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 48ms (Views: 16.7ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:25:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:25:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:25:43.774039"], ["updated_at", "2018-12-04 15:25:43.774039"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 8ms (Views: 0.4ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:25:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 1.7ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:26:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 6.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:27:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":false}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":false}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":false}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:27:26.708648"], ["updated_at", "2018-12-04 15:27:26.708648"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 21ms (Views: 0.3ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:27:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (4.8ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 121ms (Views: 40.5ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:28:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:30:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:31:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 2.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:32:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 4.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:32:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"Javascript\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"Javascript\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"Javascript\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 15:32:31.257760"], ["updated_at", "2018-12-04 15:32:31.257760"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 26ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:32:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.7ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 28ms (Views: 5.9ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:34:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 1.9ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:34:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-04 15:34:19.810072"], ["updated_at", "2018-12-04 15:34:19.810072"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 1.4ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:34:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"botty\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"botty\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"botty\"}"], ["participant_name", "a"], ["created_at", "2018-12-04 15:34:29.137092"], ["updated_at", "2018-12-04 15:34:29.137092"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 1.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:34:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 38ms (Views: 18.8ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:36:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 5.8ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:36:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 4.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:37:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:39:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 1.5ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:39:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"Select two or three of your second favorite programming languages:\":\"C#\",\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"Select two or three of your second favorite programming languages:\":\"C#\",\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Select two or three of your second favorite programming languages:\":\"C#\",\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 15:39:45.590957"], ["updated_at", "2018-12-04 15:39:45.590957"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 37ms (Views: 4.6ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:39:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.9ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 43ms (Views: 15.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:42:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 4.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:53:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 99ms (Views: 14.6ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:55:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 5.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:55:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 32ms (Views: 8.2ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:56:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:56:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"], ["participant_name", "q"], ["created_at", "2018-12-04 15:56:23.323373"], ["updated_at", "2018-12-04 15:56:23.323373"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 23ms (Views: 0.3ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:56:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"q", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"Java\":true,\"Go\":true}],\"participant_name\":\"q\"}"], ["participant_name", "q"], ["created_at", "2018-12-04 15:56:32.561046"], ["updated_at", "2018-12-04 15:56:32.561046"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:56:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (6.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 32ms (Views: 11.1ms | ActiveRecord: 6.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:57:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 1.1ms | ActiveRecord: 0.5ms)


  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (5.9ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (4.7ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-04 15:57:47.896605"], ["updated_at", "2018-12-04 15:57:47.896605"]]
  [1m[35m (5.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (3.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.8ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (9.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (11.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (20.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (2.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (5.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-04 15:57:48.059830"], ["updated_at", "2018-12-04 15:57:48.059830"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-04 15:57:48.065959"], ["key", "environment"]]
  [1m[35m (3.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-04 15:57:48.117932"], ["updated_at", "2018-12-04 15:57:48.117932"]]
  [1m[35m (3.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-04 15:57:48.129373"], ["updated_at", "2018-12-04 15:57:48.129373"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-04 15:57:48.133259"], ["updated_at", "2018-12-04 15:57:48.133259"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-04 15:57:48.140410"], ["updated_at", "2018-12-04 15:57:48.140410"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$nLt1bWWdMqRKLtJGdwrtruMZdm5qp/cV4arf0mnHtUJrFxLtR4YJS"], ["created_at", "2018-12-04 15:57:48.356849"], ["updated_at", "2018-12-04 15:57:48.356849"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 09:58:08 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 286ms (Views: 5.9ms | ActiveRecord: 14.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:00:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 1.2ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:01:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:01:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:02:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 6.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:03:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.9ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:03:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.8ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:04:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 49ms (Views: 22.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:05:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"What is your favorite programming language?\":\"Ruby\",\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"Python\":true,\"Go\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"What is your favorite programming language?\":\"Ruby\",\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"Python\":true,\"Go\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (5.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"What is your favorite programming language?\":\"Ruby\",\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"Python\":true,\"Go\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 16:05:08.648132"], ["updated_at", "2018-12-04 16:05:08.648132"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 67ms (Views: 0.3ms | ActiveRecord: 7.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:05:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 8ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:06:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 5.9ms | ActiveRecord: 0.6ms)


Started GET "/" for 127.0.0.1 at 2018-12-04 10:11:33 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (2.5ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 2253ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb__2130483903341773203_70236708268860'
Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:16:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 1.1ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:16:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:17:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:18:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:25:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 1.8ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:26:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:27:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:28:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:28:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:29:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.0ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:30:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:32:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 3.7ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:33:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:33:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:33:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 3.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:34:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:34:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:35:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:35:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.6ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:36:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 5.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:36:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 2.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:37:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.2ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:37:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:38:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:38:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:38:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.4ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:39:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 3.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:40:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 3.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:41:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 149ms (Views: 4.7ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:41:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:41:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:42:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:42:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:43:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:44:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:44:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:45:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:45:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 16:45:40.532600"], ["updated_at", "2018-12-04 16:45:40.532600"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 78ms (Views: 0.3ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:47:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 65ms (Views: 6.9ms | ActiveRecord: 6.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:47:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:47:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 16:47:51.012431"], ["updated_at", "2018-12-04 16:47:51.012431"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 17ms (Views: 0.6ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:48:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 8.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:48:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 4.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:53:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 126ms (Views: 3.6ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 10:53:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (11.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 16:53:30.001437"], ["updated_at", "2018-12-04 16:53:30.001437"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 39ms (Views: 2.2ms | ActiveRecord: 13.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:00:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 146ms (Views: 4.2ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:00:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 17:00:27.892991"], ["updated_at", "2018-12-04 17:00:27.892991"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 0.2ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:00:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 11ms (Views: 4.5ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:01:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Bob", "answers"=>"{\"participant_name\":\"Bob\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true,\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Bob", "answers"=>"{\"participant_name\":\"Bob\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true,\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Bob\",\"How many years have you been developing software?\":\"0\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"C++\":true,\"Ruby\":true}]}"], ["participant_name", "Bob"], ["created_at", "2018-12-04 17:01:28.811558"], ["updated_at", "2018-12-04 17:01:28.811558"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:01:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-12-04 11:02:41 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.1/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (2973.6ms)
Completed 200 OK in 3107ms (Views: 3094.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:02:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:02:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 85ms (Views: 15.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:02:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Brad", "answers"=>"{\"participant_name\":\"Brad\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Brad", "answers"=>"{\"participant_name\":\"Brad\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Brad\",\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Brad"], ["created_at", "2018-12-04 17:02:59.222578"], ["updated_at", "2018-12-04 17:02:59.222578"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:03:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:03:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:03:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Brad", "answers"=>"{\"participant_name\":\"Brad\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Brad", "answers"=>"{\"participant_name\":\"Brad\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Brad\"}"], ["participant_name", "Brad"], ["created_at", "2018-12-04 17:03:53.820334"], ["updated_at", "2018-12-04 17:03:53.820334"]]
  [1m[35m (7.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 24ms (Views: 0.3ms | ActiveRecord: 8.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:03:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:05:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:05:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"brad", "answers"=>"{\"participant_name\":\"brad\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"brad", "answers"=>"{\"participant_name\":\"brad\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"brad\"}"], ["participant_name", "brad"], ["created_at", "2018-12-04 17:05:18.252370"], ["updated_at", "2018-12-04 17:05:18.252370"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:05:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:06:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 0.8ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:06:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Sam", "answers"=>"{\"participant_name\":\"Sam\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Sam", "answers"=>"{\"participant_name\":\"Sam\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Sam\"}"], ["participant_name", "Sam"], ["created_at", "2018-12-04 17:06:55.616664"], ["updated_at", "2018-12-04 17:06:55.616664"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 6ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:06:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:07:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:07:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"sim", "answers"=>"{\"participant_name\":\"sim\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"sim", "answers"=>"{\"participant_name\":\"sim\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"sim\"}"], ["participant_name", "sim"], ["created_at", "2018-12-04 17:07:52.605529"], ["updated_at", "2018-12-04 17:07:52.605529"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 20ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:07:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:13:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 86ms (Views: 2.1ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:13:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:14:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:14:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:15:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"e", "answers"=>"{\"participant_name\":\"e\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"e", "answers"=>"{\"participant_name\":\"e\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (16.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"e\"}"], ["participant_name", "e"], ["created_at", "2018-12-04 17:15:23.903348"], ["updated_at", "2018-12-04 17:15:23.903348"]]
  [1m[35m (4.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 41ms (Views: 0.6ms | ActiveRecord: 21.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:15:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 195ms (Views: 27.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:15:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (3.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 33ms (Views: 2.5ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:16:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:19:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:22:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 53ms (Views: 2.9ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:22:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:23:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.0ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:28:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 3.1ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:32:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 4.8ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:32:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 29ms (Views: 1.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:32:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-04 17:32:39.108633"], ["updated_at", "2018-12-04 17:32:39.108633"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 26ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:32:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-04 17:32:48.096927"], ["updated_at", "2018-12-04 17:32:48.096927"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:33:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-04 17:33:09.162560"], ["updated_at", "2018-12-04 17:33:09.162560"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.5ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:34:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 1.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:36:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:38:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:38:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 6.7ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:40:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 9.0ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:41:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 5.9ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:41:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:42:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.6ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:42:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 3.0ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:42:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.6ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:43:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 6.5ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:44:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 12.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 11:46:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 93ms (Views: 17.8ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:27:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 229ms (Views: 3.9ms | ActiveRecord: 12.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:27:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:28:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:42:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (15.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 199ms (Views: 11.0ms | ActiveRecord: 15.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:42:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 116ms (Views: 27.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:43:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 41ms (Views: 14.9ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:43:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.6ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:43:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 2.4ms | ActiveRecord: 5.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:44:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 3.8ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:45:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 1.9ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:47:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 97ms (Views: 15.4ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:51:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (9.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 19.2ms | ActiveRecord: 9.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:56:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 92ms (Views: 8.0ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:57:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (3.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 19:57:25.672571"], ["updated_at", "2018-12-04 19:57:25.672571"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 209ms (Views: 0.3ms | ActiveRecord: 13.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:58:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 19:58:05.717495"], ["updated_at", "2018-12-04 19:58:05.717495"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 22ms (Views: 0.2ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:58:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 5.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:58:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 18ms (Views: 1.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:58:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 19:58:45.804738"], ["updated_at", "2018-12-04 19:58:45.804738"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 1.7ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:58:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (1.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 19:58:51.515233"], ["updated_at", "2018-12-04 19:58:51.515233"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 40ms (Views: 3.6ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 13:59:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 14.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:00:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"C#\":false,\"Java\":false}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"C#\":false,\"Java\":false}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"C#\":false,\"Java\":false}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 20:00:55.480056"], ["updated_at", "2018-12-04 20:00:55.480056"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 48ms (Views: 1.9ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:01:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 70ms (Views: 7.1ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:01:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 20:01:52.347085"], ["updated_at", "2018-12-04 20:01:52.347085"]]
  [1m[35m (3.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 34ms (Views: 0.9ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:02:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 6.6ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:02:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-04 20:02:26.877346"], ["updated_at", "2018-12-04 20:02:26.877346"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:03:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 39ms (Views: 9.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:03:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (5.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:03:48.182317"], ["updated_at", "2018-12-04 20:03:48.182317"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 40ms (Views: 0.2ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:03:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"What is your favorite programming language?\":\"Ruby\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:03:52.043866"], ["updated_at", "2018-12-04 20:03:52.043866"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 15ms (Views: 2.2ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:04:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:04:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:04:09.196244"], ["updated_at", "2018-12-04 20:04:09.196244"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 14ms (Views: 0.3ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:04:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:04:51.569708"], ["updated_at", "2018-12-04 20:04:51.569708"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 20ms (Views: 1.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:05:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 3.5ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:05:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 55ms (Views: 18.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:12:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 174ms (Views: 7.6ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:12:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 49ms (Views: 14.8ms | ActiveRecord: 7.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:12:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:12:32.032767"], ["updated_at", "2018-12-04 20:12:32.032767"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 40ms (Views: 1.5ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:13:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 26.3ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:13:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 160ms (Views: 41.6ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:14:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:14:11.979259"], ["updated_at", "2018-12-04 20:14:11.979259"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 14ms (Views: 0.4ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:14:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:14:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\"}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:14:53.965862"], ["updated_at", "2018-12-04 20:14:53.965862"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 15ms (Views: 0.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:14:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:14:59.758116"], ["updated_at", "2018-12-04 20:14:59.758116"]]
  [1m[35m (4.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 21ms (Views: 0.7ms | ActiveRecord: 5.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:15:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:15:06.416902"], ["updated_at", "2018-12-04 20:15:06.416902"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:15:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 10.8ms | ActiveRecord: 6.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:16:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true}]}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:16:08.412783"], ["updated_at", "2018-12-04 20:16:08.412783"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 19ms (Views: 2.2ms | ActiveRecord: 5.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:19:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 27ms (Views: 4.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:19:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\",\"Are you a good developer?\":true}"], ["participant_name", "a"], ["created_at", "2018-12-04 20:19:16.778158"], ["updated_at", "2018-12-04 20:19:16.778158"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 19ms (Views: 1.5ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:21:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 5.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:25:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 95ms (Views: 4.5ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:25:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Amber", "answers"=>"{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.7ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Amber\",\"Are you a good developer?\":true,\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"], ["participant_name", "Amber"], ["created_at", "2018-12-04 20:25:41.331329"], ["updated_at", "2018-12-04 20:25:41.331329"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 30ms (Views: 0.4ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:27:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:27:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 6.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:28:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.5ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:29:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 7.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:29:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:29:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 5.0ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:32:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 1.5ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:34:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 6.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:46:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 152ms (Views: 4.8ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:52:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.6ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:55:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 11.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:56:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 9.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:57:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 4.5ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:57:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:59:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 5.8ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 14:59:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 10.1ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:00:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 4.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:03:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 2.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:05:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 4.3ms | ActiveRecord: 6.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:09:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 37ms (Views: 5.9ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:15:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 79ms (Views: 12.6ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:15:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 2.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:26:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 128ms (Views: 27.9ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:31:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 44ms (Views: 3.3ms | ActiveRecord: 5.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:31:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 69ms (Views: 8.9ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:39:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 5.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:40:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 12.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 15:40:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 7.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 16:30:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (25.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 222ms (Views: 12.4ms | ActiveRecord: 25.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 16:31:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 3.8ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 16:40:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 141ms (Views: 25.8ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 16:55:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (11.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 168ms (Views: 4.0ms | ActiveRecord: 11.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 16:59:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 82ms (Views: 15.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:00:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 168ms (Views: 18.2ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:04:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 101ms (Views: 15.4ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:08:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 179ms (Views: 15.7ms | ActiveRecord: 6.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:10:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 85ms (Views: 16.6ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:14:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 118ms (Views: 23.8ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:15:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 113ms (Views: 22.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:16:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 209ms (Views: 22.3ms | ActiveRecord: 4.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:18:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 679ms (Views: 9.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:19:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 9.0ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:19:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 33ms (Views: 8.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:20:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 48ms (Views: 4.2ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:20:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 5.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:26:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 3.7ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:29:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 2.1ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:30:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 4.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:30:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 4.8ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:32:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 2.6ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:34:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 210ms (Views: 81.1ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:34:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 34ms (Views: 1.0ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:36:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.1ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:36:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 4.3ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:38:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 65ms (Views: 5.7ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:39:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 1.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:39:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (5.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 15.9ms | ActiveRecord: 5.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:42:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (7.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 4.4ms | ActiveRecord: 7.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:43:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 57ms (Views: 14.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 17:44:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 0.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 22:54:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 86ms (Views: 4.3ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 22:57:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 79ms (Views: 5.7ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:01:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 113ms (Views: 8.0ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:02:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 5.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:03:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 3.2ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:05:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 3.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:05:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:05:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 5.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:08:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 98ms (Views: 35.9ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:18:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 104ms (Views: 11.7ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:21:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 64ms (Views: 8.3ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:22:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 54ms (Views: 4.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:22:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 59ms (Views: 14.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:23:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 7.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:24:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 45ms (Views: 15.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:24:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (10.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 17.7ms | ActiveRecord: 10.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:25:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 54ms (Views: 7.4ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:26:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (9.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 63ms (Views: 10.0ms | ActiveRecord: 9.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:27:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 70ms (Views: 14.2ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:28:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 84ms (Views: 30.0ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:29:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 7.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:29:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 9.6ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:30:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 43ms (Views: 10.4ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:31:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (16.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 116ms (Views: 25.3ms | ActiveRecord: 16.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:32:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (9.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 65ms (Views: 15.7ms | ActiveRecord: 9.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:32:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 55ms (Views: 7.3ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:33:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (14.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 6.2ms | ActiveRecord: 14.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:33:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 12.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:33:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 8.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:33:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 28ms (Views: 10.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:34:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 46ms (Views: 8.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:34:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 35ms (Views: 4.1ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:35:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 40ms (Views: 7.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:35:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 1.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:36:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 69ms (Views: 14.2ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:36:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 7.6ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:37:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 10.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:52:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 86ms (Views: 10.9ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:52:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 39ms (Views: 9.6ms | ActiveRecord: 3.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:54:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 38ms (Views: 8.8ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:55:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 81ms (Views: 10.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-04 23:55:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 6.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:16:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 61ms (Views: 3.5ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:17:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:20:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 4.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:23:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 7.8ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:25:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 6.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:26:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 5.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:27:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 1.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:27:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 8.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:31:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 6.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:31:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.1ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:32:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 5.2ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:32:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 4.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:33:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 1.7ms | ActiveRecord: 0.6ms)


  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 06:37:52.657339"], ["updated_at", "2018-12-05 06:37:52.657339"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 06:37:52.708647"], ["updated_at", "2018-12-05 06:37:52.708647"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-05 06:37:52.713653"], ["key", "environment"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-05 06:37:52.746253"], ["updated_at", "2018-12-05 06:37:52.746253"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-05 06:37:52.753508"], ["updated_at", "2018-12-05 06:37:52.753508"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "list"], ["options", "---\n- '\"\"'\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-05 06:37:52.757760"], ["updated_at", "2018-12-05 06:37:52.757760"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- '\"\"'\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-05 06:37:52.764320"], ["updated_at", "2018-12-05 06:37:52.764320"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$89jh10UNi2pyUxOQq0VXXeH1iug/DHkINnBQ8LMf6.uKGFxN9iSqe"], ["created_at", "2018-12-05 06:37:52.975840"], ["updated_at", "2018-12-05 06:37:52.975840"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:38:54 -0600
  [1m[35m (3.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 164ms (Views: 1.8ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 00:39:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.1ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:00:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 8.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:01:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 3.6ms | ActiveRecord: 0.7ms)


  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (4.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (4.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 07:03:22.737593"], ["updated_at", "2018-12-05 07:03:22.737593"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (6.4ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (2.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 07:03:22.826745"], ["updated_at", "2018-12-05 07:03:22.826745"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-05 07:03:22.833836"], ["key", "environment"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-05 07:03:22.858747"], ["updated_at", "2018-12-05 07:03:22.858747"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.0ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-05 07:03:22.864131"], ["updated_at", "2018-12-05 07:03:22.864131"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-05 07:03:22.873939"], ["updated_at", "2018-12-05 07:03:22.873939"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-05 07:03:22.883771"], ["updated_at", "2018-12-05 07:03:22.883771"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$FUdEaCYJ7hhh.YL1hxCKPOZ6Q.Pcw1SNma7i3/YT3cQ7irQE4N1wS"], ["created_at", "2018-12-05 07:03:23.117241"], ["updated_at", "2018-12-05 07:03:23.117241"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:06:33 -0600
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 224ms (Views: 1.7ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:15:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:19:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:20:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:22:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:22:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 4.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:23:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.0ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:23:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 6.5ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:24:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 37ms (Views: 8.0ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:25:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 36ms (Views: 12.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:28:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 4.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:31:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.7ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:31:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 4.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:33:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 3.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:35:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:44:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 01:48:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:00:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.3ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:00:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:01:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:03:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.1ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 41ms (Views: 0.4ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:04:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.7ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:05:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:05:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:06:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:06:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:06:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:07:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:07:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:08:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:08:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:09:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:09:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:10:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.9ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:10:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:11:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"  mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"  mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (3.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-05 08:11:54.804541"], ["updated_at", "2018-12-05 08:11:54.804541"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 33ms (Views: 0.5ms | ActiveRecord: 5.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:12:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 8ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:15:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:21:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:21:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:22:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 02:23:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:00:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (6.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 59ms (Views: 3.5ms | ActiveRecord: 6.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:00:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 7ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:01:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (18.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 15:04:45.398349"], ["updated_at", "2018-12-05 15:04:45.398349"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (4.1ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (27.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (2.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (6.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (2.9ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (3.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (4.0ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 15:04:45.543210"], ["updated_at", "2018-12-05 15:04:45.543210"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-05 15:04:45.583723"], ["key", "environment"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-05 15:04:45.732228"], ["updated_at", "2018-12-05 15:04:45.732228"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-05 15:04:45.739631"], ["updated_at", "2018-12-05 15:04:45.739631"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (8.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-05 15:04:45.753020"], ["updated_at", "2018-12-05 15:04:45.753020"]]
  [1m[35m (2.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-05 15:04:45.762201"], ["updated_at", "2018-12-05 15:04:45.762201"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$.ZGp/xoGgPRdS1mH1qdgfuokvIEPybRYH7ifa.DkWPcuQJMGfbEiO"], ["created_at", "2018-12-05 15:04:46.110939"], ["updated_at", "2018-12-05 15:04:46.110939"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:06:09 -0600
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 234ms (Views: 6.5ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:06:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:07:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:07:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:12:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 56ms (Views: 4.6ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:13:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 29ms (Views: 8.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:13:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (5.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 15:13:56.194416"], ["updated_at", "2018-12-05 15:13:56.194416"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 134ms (Views: 0.8ms | ActiveRecord: 11.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:14:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:16:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:24:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.7ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:29:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 59ms (Views: 4.7ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:39:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 112ms (Views: 47.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:40:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 49ms (Views: 12.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:41:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 31ms (Views: 8.2ms | ActiveRecord: 3.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:41:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:54:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 127ms (Views: 12.8ms | ActiveRecord: 4.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:57:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 22ms (Views: 5.0ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:58:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 24ms (Views: 2.0ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:58:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 09:58:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:16.421279"], ["updated_at", "2018-12-05 16:00:16.421279"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:16.941160"], ["updated_at", "2018-12-05 16:00:16.941160"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.5ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:18.085972"], ["updated_at", "2018-12-05 16:00:18.085972"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:18.630421"], ["updated_at", "2018-12-05 16:00:18.630421"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.4ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:19.868845"], ["updated_at", "2018-12-05 16:00:19.868845"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.2ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 16:00:22.323119"], ["updated_at", "2018-12-05 16:00:22.323119"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:00:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 9ms (Views: 3.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:01:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:01:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:01:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:02:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:02:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:04:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:06:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:21:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 69ms (Views: 3.6ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 10:59:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 47ms (Views: 2.9ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:09:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 17:09:44.295682"], ["updated_at", "2018-12-05 17:09:44.295682"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 17ms (Views: 0.4ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:09:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:09:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 63ms (Views: 12.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:10:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:10:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.8ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 39ms (Views: 5.0ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.0ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:54 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (3.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 108ms (Views: 1.4ms | ActiveRecord: 4.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 13ms (Views: 2.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 11ms (Views: 3.3ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:15:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 9ms (Views: 3.6ms | ActiveRecord: 0.3ms)


  [1m[35m (7.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (5.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 17:16:16.260239"], ["updated_at", "2018-12-05 17:16:16.260239"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (4.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (10.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.6ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (3.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (4.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-05 17:16:16.388952"], ["updated_at", "2018-12-05 17:16:16.388952"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-05 17:16:16.394074"], ["key", "environment"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-05 17:16:16.459973"], ["updated_at", "2018-12-05 17:16:16.459973"]]
  [1m[35m (0.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-05 17:16:16.464998"], ["updated_at", "2018-12-05 17:16:16.464998"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-05 17:16:16.469775"], ["updated_at", "2018-12-05 17:16:16.469775"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "multiselect", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["multiselect", "t"], ["created_at", "2018-12-05 17:16:16.477780"], ["updated_at", "2018-12-05 17:16:16.477780"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$T3qnGXKgyyOM8SE4dQfQaOWOhRRZCBaHh5dF9qzQRfzMif4IUQkxO"], ["created_at", "2018-12-05 17:16:16.719032"], ["updated_at", "2018-12-05 17:16:16.719032"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:18:45 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 380ms (Views: 9.1ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:19:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"23\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":false,\"Javascript\":true,\"PHP\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"23\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":false,\"Javascript\":true,\"PHP\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"23\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":false,\"Javascript\":true,\"PHP\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 17:19:29.826090"], ["updated_at", "2018-12-05 17:19:29.826090"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 36ms (Views: 0.3ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:19:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:23:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:24:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:25:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"1", "answers"=>"{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"1", "answers"=>"{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true}]}"], ["participant_name", "1"], ["created_at", "2018-12-05 17:25:07.211215"], ["updated_at", "2018-12-05 17:25:07.211215"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.6ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:25:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"1", "answers"=>"{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"1", "answers"=>"{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.9ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"1\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"], ["participant_name", "1"], ["created_at", "2018-12-05 17:25:13.280723"], ["updated_at", "2018-12-05 17:25:13.280723"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.5ms | ActiveRecord: 2.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:28:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 68ms (Views: 0.7ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:28:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s", "answers"=>"{\"participant_name\":\"s\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"s", "answers"=>"{\"participant_name\":\"s\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"s\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true}"], ["participant_name", "s"], ["created_at", "2018-12-05 17:28:19.796189"], ["updated_at", "2018-12-05 17:28:19.796189"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 23ms (Views: 0.8ms | ActiveRecord: 3.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:28:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.2ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 1.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:32:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.6ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:43:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.1ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:43:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"How many years have you been developing software?\":\"100\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"How many years have you been developing software?\":\"100\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Booty\",\"How many years have you been developing software?\":\"100\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"], ["participant_name", "Booty"], ["created_at", "2018-12-05 17:43:34.991678"], ["updated_at", "2018-12-05 17:43:34.991678"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 7ms (Views: 0.2ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:57:14 -0600
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 59ms (Views: 0.6ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 11:57:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 12:05:05 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 91ms (Views: 0.8ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 12:05:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 12:05:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 12:05:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-05 12:05:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.8ms | ActiveRecord: 0.4ms)


  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (4.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-05 13:05:14 -0600
  [1m[35m (0.9ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 147ms (Views: 1.7ms | ActiveRecord: 1.5ms)


Started POST "/graphql" for ::1 at 2018-12-05 14:35:43 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 403ms (Views: 3.7ms | ActiveRecord: 5.2ms)


Started POST "/graphql" for ::1 at 2018-12-05 14:36:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"4.5\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Python\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-05 20:36:17.445093"], ["updated_at", "2018-12-05 20:36:17.445093"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 49ms (Views: 3.4ms | ActiveRecord: 3.9ms)


Started GET "/" for ::1 at 2018-12-05 14:39:33 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (1.5ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 630ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb__2569625656515553625_70203987230080'
Started GET "/" for ::1 at 2018-12-05 14:42:31 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (1.2ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 811ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb__2569625656515553625_70203990624780'
Started GET "/" for ::1 at 2018-12-05 14:51:31 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (2.4ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:

/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.4.0/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'

Completed 500 Internal Server Error in 836ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___3705174241684981923_70179690323660'
Started GET "/graphiql" for ::1 at 2018-12-05 14:51:33 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (8496.5ms)
Completed 200 OK in 8576ms (Views: 8566.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-05 14:51:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 156ms (Views: 14.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-05 16:54:50 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 134ms (Views: 7.7ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-12-06 09:30:59 -0600
  [1m[35m (1.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 109ms (Views: 15.7ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for ::1 at 2018-12-07 10:48:05 -0600
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 64ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateQuiz):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-12-07 10:48:29 -0600
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 31ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateQuiz):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-07 16:49:43.530915"], ["updated_at", "2018-12-07 16:49:43.530915"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-07 16:49:43.538487"], ["updated_at", "2018-12-07 16:49:43.538487"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-07 16:49:43.542618"], ["updated_at", "2018-12-07 16:49:43.542618"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-07 16:49:43.548892"], ["updated_at", "2018-12-07 16:49:43.548892"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-07 16:49:43.553030"], ["updated_at", "2018-12-07 16:49:43.553030"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (3.1ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451);

[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-07 16:49:57.396224"], ["updated_at", "2018-12-07 16:49:57.396224"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (9.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.7ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (4.3ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451);

[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-07 16:49:57.471960"], ["updated_at", "2018-12-07 16:49:57.471960"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-07 16:49:57.476987"], ["key", "environment"]]
  [1m[35m (2.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-07 16:49:57.506563"], ["updated_at", "2018-12-07 16:49:57.506563"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-07 16:49:57.513601"], ["updated_at", "2018-12-07 16:49:57.513601"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-07 16:49:57.516947"], ["updated_at", "2018-12-07 16:49:57.516947"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-07 16:49:57.522048"], ["updated_at", "2018-12-07 16:49:57.522048"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-07 16:49:57.527695"], ["updated_at", "2018-12-07 16:49:57.527695"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.1ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$y/0xcx2WjMlidjVmTKJckeNLlSLehiNxFYR/Wl5Nn8Nj659AJz8Cm"], ["created_at", "2018-12-07 16:49:57.723652"], ["updated_at", "2018-12-07 16:49:57.723652"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for ::1 at 2018-12-07 10:50:26 -0600
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 27ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateQuiz):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-12-07 10:52:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 1ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateQuiz):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for ::1 at 2018-12-07 10:53:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 500 Internal Server Error in 0ms (ActiveRecord: 0.0ms)


  
NameError (uninitialized constant Resolvers::CreateQuiz):
  
app/graphql/types/mutation_type.rb:4:in `block in <top (required)>'
app/graphql/cohub_code_challenge_schema.rb:1:in `<top (required)>'
app/controllers/graphql_controller.rb:10:in `execute'
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (6.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.8ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (21.0ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (4.4ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.8ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (19.4ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (4.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (5.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-08 00:29:03.501879"], ["updated_at", "2018-12-08 00:29:03.501879"]]
  [1m[35m (9.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (12.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (12.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.6ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.0ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (35.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (5.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-08 00:29:03.713626"], ["updated_at", "2018-12-08 00:29:03.713626"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-08 00:29:03.721557"], ["key", "environment"]]
  [1m[35m (8.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-08 00:29:03.779828"], ["updated_at", "2018-12-08 00:29:03.779828"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-08 00:29:03.786489"], ["updated_at", "2018-12-08 00:29:03.786489"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-08 00:29:03.794106"], ["updated_at", "2018-12-08 00:29:03.794106"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-08 00:29:03.801113"], ["updated_at", "2018-12-08 00:29:03.801113"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-08 00:29:03.812823"], ["updated_at", "2018-12-08 00:29:03.812823"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$pEheTN.MUX4TgSukQ07QleZpRFysTWpu4.esn4mKCg5oTxnxbdB.S"], ["created_at", "2018-12-08 00:29:04.122530"], ["updated_at", "2018-12-08 00:29:04.122530"]]
  [1m[35m (2.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-08 00:29:20.934058"], ["updated_at", "2018-12-08 00:29:20.934058"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-08 00:29:20.938998"], ["updated_at", "2018-12-08 00:29:20.938998"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-08 00:29:20.942754"], ["updated_at", "2018-12-08 00:29:20.942754"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-08 00:29:20.951916"], ["updated_at", "2018-12-08 00:29:20.951916"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-08 00:29:20.956523"], ["updated_at", "2018-12-08 00:29:20.956523"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (25.5ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (20.1ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (132.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (4.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (3.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.9ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (8.1ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 19:33:16.773191"], ["updated_at", "2018-12-09 19:33:16.773191"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (12.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (11.0ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (9.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (8.0ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (3.0ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (12.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (11.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (3.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.5ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 19:33:16.935199"], ["updated_at", "2018-12-09 19:33:16.935199"]]
  [1m[35m (25.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.1ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-09 19:33:16.991717"], ["key", "environment"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 19:33:17.054844"], ["updated_at", "2018-12-09 19:33:17.054844"]]
  [1m[35m (7.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 19:33:17.066683"], ["updated_at", "2018-12-09 19:33:17.066683"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 19:33:17.071178"], ["updated_at", "2018-12-09 19:33:17.071178"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 19:33:17.078376"], ["updated_at", "2018-12-09 19:33:17.078376"]]
  [1m[35m (4.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 19:33:17.090622"], ["updated_at", "2018-12-09 19:33:17.090622"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$bl4nSqZfrnPWPbo2tnbr/.bbQTNHG8EyhKwVnSssB..wgfZinj8W2"], ["created_at", "2018-12-09 19:33:17.384525"], ["updated_at", "2018-12-09 19:33:17.384525"]]
  [1m[35m (3.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.6ms)[0m  [1m[35mDROP TABLE "quizzes"[0m
  [1m[35mSQL (0.6ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129033930"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (3.7ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (2.0ms)[0m  [1m[35mDROP TABLE "active_admin_comments"[0m
  [1m[35mSQL (0.2ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129032455"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.3ms)[0m  [1m[35mDROP INDEX "index_admin_users_on_reset_password_token"[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (2.8ms)[0m  [1m[35mDROP INDEX "index_admin_users_on_email"[0m
  [1m[35m (90.1ms)[0m  [1m[35mDROP TABLE "admin_users"[0m
  [1m[35mSQL (0.4ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20181129032451"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (16.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (102.8ms)[0m  [1m[35mDROP TABLE "questions"[0m
  [1m[35mSQL (0.5ms)[0m  [1m[31mDELETE FROM "schema_migrations" WHERE "schema_migrations"."version" = ?[0m  [["version", "20180324015952"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[36mActiveRecord::InternalMetadata Load (1.0ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.6ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (2.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (3.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (2.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 20:05:31.484751"], ["updated_at", "2018-12-09 20:05:31.484751"]]
  [1m[35m (5.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 20:05:39.973545"], ["updated_at", "2018-12-09 20:05:39.973545"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 20:05:39.977506"], ["updated_at", "2018-12-09 20:05:39.977506"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 20:05:39.981231"], ["updated_at", "2018-12-09 20:05:39.981231"]]
  [1m[35m (5.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 20:05:39.991654"], ["updated_at", "2018-12-09 20:05:39.991654"]]
  [1m[35m (24.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 20:05:40.023534"], ["updated_at", "2018-12-09 20:05:40.023534"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$G1JMETNZxcF8l0BKOSW7bOtrDbyzERCtby91l.lrKUoPzkX22aDMC"], ["created_at", "2018-12-09 20:05:40.410202"], ["updated_at", "2018-12-09 20:05:40.410202"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Started GET "/" for 127.0.0.1 at 2018-12-09 14:11:12 -0600
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (7.1ms)
[Webpacker] Compilingâ€¦
[Webpacker] Compilation failed:
/Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.5.5/lib/webpacker/webpack_runner.rb:11:in `exec': No such file or directory - /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/node_modules/.bin/webpack (Errno::ENOENT)
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.5.5/lib/webpacker/webpack_runner.rb:11:in `block in run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.5.5/lib/webpacker/webpack_runner.rb:10:in `chdir'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.5.5/lib/webpacker/webpack_runner.rb:10:in `run'
	from /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/webpacker-3.5.5/lib/webpacker/runner.rb:6:in `run'
	from ./bin/webpack:15:in `<main>'


Completed 500 Internal Server Error in 1812ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___920011316684972787_70202099127260'
Started GET "/graphiql" for 127.0.0.1 at 2018-12-09 14:11:20 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (739.1ms)
Completed 200 OK in 818ms (Views: 809.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 14:11:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 133ms (Views: 42.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:12:09 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 130ms (Views: 1.4ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:13:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:15:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:15:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:16:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:16:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started GET "/graphiql" for ::1 at 2018-12-09 14:31:16 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (760.1ms)
Completed 200 OK in 823ms (Views: 809.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:31:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 62ms (Views: 13.3ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for ::1 at 2018-12-09 14:44:26 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (34.2ms)
Completed 200 OK in 74ms (Views: 68.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:44:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 43ms (Views: 9.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:44:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (2.1ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 35ms (Views: 0.3ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for ::1 at 2018-12-09 14:49:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 357ms (Views: 20.5ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 15:42:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (9.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 81ms (Views: 7.6ms | ActiveRecord: 9.7ms)


  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (8.3ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.7ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (3.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 21:57:45.367428"], ["updated_at", "2018-12-09 21:57:45.367428"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 21:57:51.788539"], ["updated_at", "2018-12-09 21:57:51.788539"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 21:57:51.794097"], ["updated_at", "2018-12-09 21:57:51.794097"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 21:57:51.797237"], ["updated_at", "2018-12-09 21:57:51.797237"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 21:57:51.802427"], ["updated_at", "2018-12-09 21:57:51.802427"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 21:57:51.809780"], ["updated_at", "2018-12-09 21:57:51.809780"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$ZZjo1BoWOOEM93SuSbBu6.8Jom5tpIBoGAPljynlLHPnmHqNKx.iW"], ["created_at", "2018-12-09 21:57:52.055577"], ["updated_at", "2018-12-09 21:57:52.055577"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (1.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.7ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.0ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (8.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (2.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (7.8ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (3.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (12.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 22:00:39.434190"], ["updated_at", "2018-12-09 22:00:39.434190"]]
  [1m[35m (2.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 22:00:45.194423"], ["updated_at", "2018-12-09 22:00:45.194423"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 22:00:45.202480"], ["updated_at", "2018-12-09 22:00:45.202480"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:00:45.208553"], ["updated_at", "2018-12-09 22:00:45.208553"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:00:45.218910"], ["updated_at", "2018-12-09 22:00:45.218910"]]
  [1m[35m (3.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 22:00:45.227044"], ["updated_at", "2018-12-09 22:00:45.227044"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$It0jEUujKfqNkNiv8pjNh.125g61sl1xbUVlToyBpHcgdI6VLpPfq"], ["created_at", "2018-12-09 22:00:45.457274"], ["updated_at", "2018-12-09 22:00:45.457274"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (2.6ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (1.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.8ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 22:05:06.196030"], ["updated_at", "2018-12-09 22:05:06.196030"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 22:05:29.662329"], ["updated_at", "2018-12-09 22:05:29.662329"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 22:05:29.669004"], ["updated_at", "2018-12-09 22:05:29.669004"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.9ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:05:29.674659"], ["updated_at", "2018-12-09 22:05:29.674659"]]
  [1m[35m (46.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:05:29.803338"], ["updated_at", "2018-12-09 22:05:29.803338"]]
  [1m[35m (4.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 22:05:29.817114"], ["updated_at", "2018-12-09 22:05:29.817114"]]
  [1m[35m (4.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$Ig44RiHgmDPIChMNJu/RveIIaGTYJKZAHl/ZBJCSThefnugLJjX4K"], ["created_at", "2018-12-09 22:05:30.106017"], ["updated_at", "2018-12-09 22:05:30.106017"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.6ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.1ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (3.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.9ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 22:07:57.974264"], ["updated_at", "2018-12-09 22:07:57.974264"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.8ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateQuestions (20180324015952)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180324015952"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Migrating to DeviseCreateAdminUsers (20181129032451)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.8ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032451"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateActiveAdminComments (20181129032455)
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.7ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129032455"]]
  [1m[35m (5.7ms)[0m  [1m[36mcommit transaction[0m
Migrating to CreateQuizzes (20181129033930)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20181129033930"]]
  [1m[35m (2.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-09 22:10:38.847083"], ["updated_at", "2018-12-09 22:10:38.847083"]]
  [1m[35m (5.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.7ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["created_at", "2018-12-09 22:10:49.319005"], ["updated_at", "2018-12-09 22:10:49.319005"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-09 22:10:49.323126"], ["updated_at", "2018-12-09 22:10:49.323126"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:10:49.326182"], ["updated_at", "2018-12-09 22:10:49.326182"]]
  [1m[35m (2.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.8ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.2ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-09 22:10:49.335503"], ["updated_at", "2018-12-09 22:10:49.335503"]]
  [1m[35m (1.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.6ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-09 22:10:49.352521"], ["updated_at", "2018-12-09 22:10:49.352521"]]
  [1m[35m (2.6ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$KWoFHnC8thZNgOsfnQdMBu1oZ1oFLSgAv4nzC92aargZVHJ/ZSbHu"], ["created_at", "2018-12-09 22:10:49.604576"], ["updated_at", "2018-12-09 22:10:49.604576"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_resource_type_and_resource_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_reset_password_token' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-12-09 16:16:22 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (479.1ms)
Completed 200 OK in 536ms (Views: 527.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 16:16:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 138ms (Views: 54.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 16:16:58 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 150ms (Views: 1.3ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for ::1 at 2018-12-09 16:20:11 -0600
  [1m[35m (2.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 169ms (Views: 15.2ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for ::1 at 2018-12-09 16:20:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-09 22:20:18.444412"], ["updated_at", "2018-12-09 22:20:18.444412"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 23ms (Views: 0.4ms | ActiveRecord: 3.3ms)


Started GET "/graphiql" for ::1 at 2018-12-09 16:24:45 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (980.4ms)
Completed 200 OK in 1041ms (Views: 1031.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 16:24:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 70ms (Views: 20.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:04:38 -0600
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 213ms (Views: 2.8ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:06:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  ListQuestions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:07:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 00:07:58.966290"], ["updated_at", "2018-12-10 00:07:58.966290"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 32ms (Views: 0.4ms | ActiveRecord: 7.9ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:08:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 00:08:03.307325"], ["updated_at", "2018-12-10 00:08:03.307325"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.7ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:08:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 00:08:05.957477"], ["updated_at", "2018-12-10 00:08:05.957477"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:09:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:09:36 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 287ms (Views: 1.3ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:13:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-10 00:13:39.768020"], ["updated_at", "2018-12-10 00:13:39.768020"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 37ms (Views: 6.2ms | ActiveRecord: 6.7ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:14:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ra", "answers"=>"{\"participant_name\":\"ra\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ra", "answers"=>"{\"participant_name\":\"ra\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"ra\",\"Are you a good developer?\":true}"], ["participant_name", "ra"], ["created_at", "2018-12-10 00:14:06.480524"], ["updated_at", "2018-12-10 00:14:06.480524"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.9ms | ActiveRecord: 2.9ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:14:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for ::1 at 2018-12-09 18:24:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 122ms (Views: 14.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 18:31:27 -0600
  [1m[35m (0.8ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 78ms (Views: 1.2ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for ::1 at 2018-12-09 19:26:53 -0600
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.5ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 53ms (Views: 1.6ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for ::1 at 2018-12-09 19:27:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-10 01:27:02.659788"], ["updated_at", "2018-12-10 01:27:02.659788"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.5ms | ActiveRecord: 3.3ms)


Started POST "/graphql" for ::1 at 2018-12-09 19:37:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-10 01:37:30.380961"], ["updated_at", "2018-12-10 01:37:30.380961"]]
  [1m[35m (2.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.4ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for ::1 at 2018-12-09 19:37:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz", "graphql"=>{"query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n    createQuiz(participant_name: $participant_name, answers: $answers) {\n      id\n      participant_name\n      answers\n    }\n  }", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>"CreateQuiz"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "DUDE"], ["participant_name", "Ransolo"], ["created_at", "2018-12-10 01:37:32.969123"], ["updated_at", "2018-12-10 01:37:32.969123"]]
  [1m[35m (2.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.8ms | ActiveRecord: 4.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 20:01:35 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 121ms (Views: 3.0ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 20:16:47 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 84ms (Views: 2.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 20:47:30 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 152ms (Views: 2.7ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 21:40:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 21:50:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 63ms (Views: 4.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 21:51:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (4.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 03:51:05.265845"], ["updated_at", "2018-12-10 03:51:05.265845"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 52ms (Views: 0.7ms | ActiveRecord: 7.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 22:57:28 -0600
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 130ms (Views: 1.3ms | ActiveRecord: 1.7ms)


  [1m[35m (3.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (2.4ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ?[0m  [["key", "environment"]]
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (3.5ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (24.0ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.7ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (4.5ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.4ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (2.1ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (15.4ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (3.4ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-10 05:03:12.767330"], ["updated_at", "2018-12-10 05:03:12.767330"]]
  [1m[35m (3.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.2ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.3ms)[0m  [1m[35mDROP TABLE IF EXISTS "active_admin_comments"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (2.3ms)[0m  [1m[35mCREATE TABLE "active_admin_comments" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "namespace" varchar, "body" text, "resource_type" varchar, "resource_id" integer, "author_type" varchar, "author_id" integer, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (3.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_author_type_and_author_id" ON "active_admin_comments" ("author_type", "author_id")[0m
  [1m[35m (0.3ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.8ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_namespace" ON "active_admin_comments" ("namespace")[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_namespace' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_active_admin_comments_on_author_type_and_author_id' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE  INDEX "index_active_admin_comments_on_resource_type_and_resource_id" ON "active_admin_comments" ("resource_type", "resource_id")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "admin_users"[0m
  [1m[35m (2.0ms)[0m  [1m[35mCREATE TABLE "admin_users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "email" varchar DEFAULT '' NOT NULL, "encrypted_password" varchar DEFAULT '' NOT NULL, "reset_password_token" varchar, "reset_password_sent_at" datetime, "remember_created_at" datetime, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_email" ON "admin_users" ("email")[0m
  [1m[35m (0.2ms)[0m  [1m[34m            SELECT sql
            FROM sqlite_master
            WHERE name='index_admin_users_on_email' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_admin_users_on_email' AND type='index'
[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE UNIQUE INDEX "index_admin_users_on_reset_password_token" ON "admin_users" ("reset_password_token")[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "questions"[0m
  [1m[35m (1.2ms)[0m  [1m[35mCREATE TABLE "questions" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "position" integer NOT NULL, "label" text NOT NULL, "field_type" varchar DEFAULT 'string' NOT NULL, "options" text, "multiselect" boolean DEFAULT 'f', "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[35mDROP TABLE IF EXISTS "quizzes"[0m
  [1m[35m (1.5ms)[0m  [1m[35mCREATE TABLE "quizzes" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "answers" text, "participant_name" varchar DEFAULT 'string' NOT NULL, "score" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (5.7ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (1.9ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20181129033930)[0m
  [1m[35m (1.7ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES
(20180324015952),
(20181129032451),
(20181129032455);

[0m
  [1m[35m (1.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-12-10 05:03:12.841225"], ["updated_at", "2018-12-10 05:03:12.841225"]]
  [1m[35m (3.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[33mUPDATE "ar_internal_metadata" SET "value" = ?, "updated_at" = ? WHERE "ar_internal_metadata"."key" = ?[0m  [["value", "test"], ["updated_at", "2018-12-10 05:03:12.851289"], ["key", "environment"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 0], ["label", "How many years have you been developing software?"], ["field_type", "number"], ["created_at", "2018-12-10 05:03:12.883940"], ["updated_at", "2018-12-10 05:03:12.883940"]]
  [1m[35m (8.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?)[0m  [["position", 1], ["label", "Are you a good developer?"], ["field_type", "boolean"], ["created_at", "2018-12-10 05:03:12.897094"], ["updated_at", "2018-12-10 05:03:12.897094"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 2], ["label", "What is your favorite programming language?"], ["field_type", "select"], ["options", "---\n- Select\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-10 05:03:12.903705"], ["updated_at", "2018-12-10 05:03:12.903705"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 3], ["label", "Select two or three of your second favorite programming languages:"], ["field_type", "list"], ["options", "---\n- Ruby\n- Javascript\n- PHP\n- C#\n- C++\n- Java\n- Objective-C\n- Swift\n- Go\n- Python\n- Cobol\n- Fortran\n"], ["created_at", "2018-12-10 05:03:12.917458"], ["updated_at", "2018-12-10 05:03:12.917458"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "questions" ("position", "label", "field_type", "options", "created_at", "updated_at") VALUES (?, ?, ?, ?, ?, ?)[0m  [["position", 4], ["label", "Are you guys gonna hire me?"], ["field_type", "select"], ["options", "---\n- Select\n- 'Yes'\n- 'No'\n- Maybe\n"], ["created_at", "2018-12-10 05:03:12.922518"], ["updated_at", "2018-12-10 05:03:12.922518"]]
  [1m[35m (0.8ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mAdminUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "admin_users" WHERE "admin_users"."email" = ? LIMIT ?[0m  [["email", "admin@example.com"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "admin_users" ("email", "encrypted_password", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["email", "admin@example.com"], ["encrypted_password", "$2a$11$dl4m.GF.8f8RvFFOAg0ibuBgzD0cBkTNFESE3mjQQTjbmkxB/ISM2"], ["created_at", "2018-12-10 05:03:13.115237"], ["updated_at", "2018-12-10 05:03:13.115237"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:07:07 -0600
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 73ms (Views: 2.0ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:07:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:08:41 -0600
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 73ms (Views: 0.9ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:10:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:11:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:12:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:14:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-09 23:18:08 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (4.8ms)
Completed 200 OK in 209ms (Views: 201.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:18:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:19:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"undefined\":\"6\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"undefined\":\"6\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 13ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:21:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:24:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"undefined\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"undefined\":\"2\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.3ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"undefined\":\"2\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:24:55.692486"], ["updated_at", "2018-12-10 05:24:55.692486"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 39ms (Views: 0.5ms | ActiveRecord: 5.4ms)


Started POST "/graphql" for ::1 at 2018-12-09 23:25:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:25:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:25:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"3\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:25:42.856583"], ["updated_at", "2018-12-10 05:25:42.856583"]]
  [1m[35m (1.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.7ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for ::1 at 2018-12-09 23:25:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:29:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-09 23:30:01 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.5ms)
Completed 200 OK in 68ms (Views: 63.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:30:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:30:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:30:35.038767"], ["updated_at", "2018-12-10 05:30:35.038767"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.2ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:30:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:30:37.603094"], ["updated_at", "2018-12-10 05:30:37.603094"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 14ms (Views: 0.9ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:32:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:32:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:33:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"C#\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"PHP\":true}],\"Are you guys gonna hire me?\":\"Yes\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"C#\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"PHP\":true}],\"Are you guys gonna hire me?\":\"Yes\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"What is your favorite programming language?\":\"C#\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"Ruby\":true,\"PHP\":true}],\"Are you guys gonna hire me?\":\"Yes\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:33:04.154687"], ["updated_at", "2018-12-10 05:33:04.154687"]]
  [1m[35m (2.9ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.4ms | ActiveRecord: 3.7ms)


Started POST "/graphql" for ::1 at 2018-12-09 23:33:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:34:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:34:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:35:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"5\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"5\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"5\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 05:35:16.570230"], ["updated_at", "2018-12-10 05:35:16.570230"]]
  [1m[35m (1.7ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 9ms (Views: 0.6ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:39:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:44:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:45:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:46:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:49:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:52:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:53:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:54:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-09 23:56:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started GET "/" for ::1 at 2018-12-10 00:02:33 -0600
Processing by QuestionnaireController#index as HTML
  Rendering questionnaire/index.html.erb within layouts/application
  Rendered questionnaire/index.html.erb within layouts/application (3.7ms)
Completed 500 Internal Server Error in 84ms (ActiveRecord: 0.0ms)


  
ActionView::Template::Error (Webpacker can't find questionnaire.js in /Users/XWINGFIGHTER/Documents/Code/cohub-challenge/public/packs/manifest.json. Possible causes:
1. You want to set webpacker.yml value of compile to true for your environment
   unless you are using the `webpack -w` or the webpack-dev-server.
2. webpack has not yet re-run to reflect updates.
3. You have misconfigured Webpacker's config/webpacker.yml file.
4. Your webpack configuration is not creating a manifest.
Your manifest contains:
{
}
):
    3:   <head>
    4:     <title>Cohub Code Challenge</title>
    5:     <%= csrf_meta_tags %>
    6:     <%= javascript_pack_tag 'questionnaire' %>
    7:   </head>
    8:   <body>
    9:     <%= yield %>
  
app/views/layouts/application.html.erb:6:in `_app_views_layouts_application_html_erb___2887199520561308641_70306401268040'
Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 00:04:37 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.6ms)
Completed 200 OK in 51ms (Views: 46.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:08:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 1.6ms | ActiveRecord: 1.5ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 00:09:26 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.3ms)
Completed 200 OK in 38ms (Views: 34.5ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 00:09:56 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.5ms)
Completed 200 OK in 69ms (Views: 63.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:10:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:11:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:11:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:14:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:14:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:14:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:15:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:22:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:23:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:24:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 00:27:29 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.4ms)
Completed 200 OK in 50ms (Views: 46.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:27:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:28:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:36:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:36:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 00:37:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:10:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 51ms (Views: 3.8ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:10:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:11:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:12:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:13:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.8ms | ActiveRecord: 1.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:14:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:14:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:14:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 80ms (Views: 58.0ms | ActiveRecord: 0.7ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 09:16:06 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (1.7ms)
Completed 200 OK in 62ms (Views: 55.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:18:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:18:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:19:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:19:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:20:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.6ms | ActiveRecord: 3.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:20:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:21:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:22:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:22:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:22:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.8ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 09:26:36 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (1.0ms)
Completed 200 OK in 174ms (Views: 163.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:32:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.1ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:33:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:36:08 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:40:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (4.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.0ms | ActiveRecord: 4.3ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 09:43:07 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.7ms)
Completed 200 OK in 58ms (Views: 51.5ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 09:45:17 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.5ms)
Completed 200 OK in 105ms (Views: 100.0ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:47:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:48:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:49:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:50:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:51:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:52:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 09:54:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:00:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:05:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:14:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:15:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:15:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:15:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 16:15:37.769445"], ["updated_at", "2018-12-10 16:15:37.769445"]]
  [1m[35m (2.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 22ms (Views: 0.5ms | ActiveRecord: 4.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:16:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:17:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:17:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (34.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 53ms (Views: 2.2ms | ActiveRecord: 34.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:19:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:20:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 3.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:21:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:23:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:24:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:25:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:25:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:26:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:27:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:27:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:30:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:30:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:31:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:32:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:33:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:35:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:36:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:36:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:37:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:37:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:38:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:40:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:43:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:43:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"answers\":\"\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 16:43:29.794059"], ["updated_at", "2018-12-10 16:43:29.794059"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 23ms (Views: 0.7ms | ActiveRecord: 2.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:47:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 5.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:47:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"answers\":\"\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 16:47:12.164817"], ["updated_at", "2018-12-10 16:47:12.164817"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.6ms | ActiveRecord: 2.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:47:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:47:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:47:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"answers\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"answers\":\"\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 16:47:48.207417"], ["updated_at", "2018-12-10 16:47:48.207417"]]
  [1m[35m (2.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.4ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:48:03 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 1.6ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:49:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:50:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 65ms (Views: 49.6ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:52:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:53:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.5ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:55:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 52ms (Views: 5.0ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 10:57:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:00:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:00:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:02:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.5ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 11:06:08 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (32.4ms)
Completed 200 OK in 183ms (Views: 175.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:08:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:10:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:11:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:11:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.2ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:12:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.8ms | ActiveRecord: 0.7ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 11:14:36 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (2.3ms)
Completed 200 OK in 161ms (Views: 155.1ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 11:20:55 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.8ms)
Completed 200 OK in 247ms (Views: 241.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:24:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 2.5ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:25:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:25:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:28:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.0ms | ActiveRecord: 1.1ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 11:32:32 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.6ms)
Completed 200 OK in 61ms (Views: 56.1ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 11:36:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.3ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:08:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 67ms (Views: 4.1ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:09:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:10:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.7ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:14:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 0.9ms | ActiveRecord: 0.8ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 13:16:03 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (2.5ms)
Completed 200 OK in 80ms (Views: 72.1ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 13:16:36 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.6ms)
Completed 200 OK in 100ms (Views: 95.0ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 13:17:27 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (0.5ms)
Completed 200 OK in 150ms (Views: 144.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:19:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 50ms (Views: 1.7ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:20:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.1ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.8ms | ActiveRecord: 1.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:21:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 4.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:21:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 23ms (Views: 11.7ms | ActiveRecord: 1.2ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 13:22:58 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (29.3ms)
Completed 200 OK in 93ms (Views: 87.6ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 13:23:20 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (1.1ms)
Completed 200 OK in 63ms (Views: 58.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:25:41 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.2ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 3.9ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Randall\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 19:26:28.381728"], ["updated_at", "2018-12-10 19:26:28.381728"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 0.4ms | ActiveRecord: 2.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Boogie", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Boogie", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"], ["participant_name", "Boogie"], ["created_at", "2018-12-10 19:26:38.990780"], ["updated_at", "2018-12-10 19:26:38.990780"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 12ms (Views: 0.3ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Boogie", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Boogie", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.3ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"Boogie\"}"], ["participant_name", "Boogie"], ["created_at", "2018-12-10 19:26:39.713999"], ["updated_at", "2018-12-10 19:26:39.713999"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 10ms (Views: 0.4ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 13ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:26:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"2\",\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.8ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.9ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:27:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:27:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:27:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:27:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:27:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:28:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:28:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 2ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:28:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.6ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:29:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:29:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:29:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:29:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:29:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:30:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:30:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 14ms (Views: 3.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:30:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:30:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:31:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 3.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:31:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:36:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 57ms (Views: 3.2ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:37:00 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 13.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:37:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 5.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:37:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 25ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:37:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 30ms (Views: 7.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:38:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:38:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 11ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:38:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:38:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 1.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:39:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.8ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:39:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:40:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"2\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true}]}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 19:40:09.258487"], ["updated_at", "2018-12-10 19:40:09.258487"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 0.3ms | ActiveRecord: 2.3ms)


Started GET "/graphiql" for ::1 at 2018-12-10 13:40:28 -0600
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/XWINGFIGHTER/.rvm/gems/ruby-2.5.3/gems/graphiql-rails-1.4.1/app/views/graphiql/rails/editors/show.html.erb (618.1ms)
Completed 200 OK in 669ms (Views: 660.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-10 13:40:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 108ms (Views: 32.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for ::1 at 2018-12-10 13:40:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (0.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 6ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:40:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:41:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 19:41:15.181398"], ["updated_at", "2018-12-10 19:41:15.181398"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 14ms (Views: 0.9ms | ActiveRecord: 2.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:41:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"], ["participant_name", "Booty"], ["created_at", "2018-12-10 19:41:26.348400"], ["updated_at", "2018-12-10 19:41:26.348400"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 17ms (Views: 0.3ms | ActiveRecord: 1.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:41:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Booty", "answers"=>"{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Booty\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"], ["participant_name", "Booty"], ["created_at", "2018-12-10 19:41:26.917220"], ["updated_at", "2018-12-10 19:41:26.917220"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.6ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for ::1 at 2018-12-10 13:41:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (3.8ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 19ms (Views: 4.2ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:41:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\",\"Are you a good developer?\":true,\"How many years have you been developing software?\":\"1\",\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 16ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:43:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:43:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:43:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"r", "answers"=>"{\"participant_name\":\"r\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"r", "answers"=>"{\"participant_name\":\"r\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"r\"}"], ["participant_name", "r"], ["created_at", "2018-12-10 19:43:27.441176"], ["updated_at", "2018-12-10 19:43:27.441176"]]
  [1m[35m (1.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.9ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:44:43 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:45:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:45:51 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:45:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 10ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:48:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 62ms (Views: 3.7ms | ActiveRecord: 3.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:48:28 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:48:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-10 19:48:32.916999"], ["updated_at", "2018-12-10 19:48:32.916999"]]
  [1m[35m (1.2ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 16ms (Views: 0.5ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:48:38 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 16ms (ActiveRecord: 0.3ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:05 -0600
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.2ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-10 19:50:10.639895"], ["updated_at", "2018-12-10 19:50:10.639895"]]
  [1m[35m (2.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 11ms (Views: 0.5ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"", "answers"=>"{\"participant_name\":\"\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
Completed 422 Unprocessable Entity in 7ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordInvalid (Validation failed: Participant name can't be blank):
  
app/graphql/resolvers/create_quiz.rb:14:in `call'
app/controllers/graphql_controller.rb:10:in `execute'
Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:42 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.1ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:50:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:52:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:52:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:52:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:53:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:53:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:53:05 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:55:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:55:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 3ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:56:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:57:18 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 2.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:57:25 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:59:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 13:59:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:00:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 4.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:00:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:09:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.9ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:10:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:13:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.2ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:13:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.0ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true}"], ["participant_name", "a"], ["created_at", "2018-12-10 20:13:14.385021"], ["updated_at", "2018-12-10 20:13:14.385021"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 20ms (Views: 1.6ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:13:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.4ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:13:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:17:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 21ms (Views: 4.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:17:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.7ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:19:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 96ms (Views: 3.7ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:19:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.1ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:20:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:20:21 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:20:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:20:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:20:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:20 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:21:29 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:22:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:22:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:23:14 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:23:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.1ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:23:19 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:23:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.5ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:23:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:11 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 2.0ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 9ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (3.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 4.1ms | ActiveRecord: 3.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:24:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 5.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:25:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 74ms (Views: 3.7ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:25:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 1.9ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:25:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:26:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:26:45 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 3.6ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:26:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:27:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:27:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.3ms | ActiveRecord: 0.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:27:04 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:13 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.9ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 20ms (Views: 3.3ms | ActiveRecord: 0.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:28:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 4ms (Views: 0.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:40:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 37ms (Views: 7.1ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:40:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.9ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:40:55 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 17ms (Views: 3.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:40:56 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 4.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:41:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:41:23 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:41:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"a", "answers"=>"{\"participant_name\":\"a\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.5ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (1.4ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"a\"}"], ["participant_name", "a"], ["created_at", "2018-12-10 20:41:27.263983"], ["updated_at", "2018-12-10 20:41:27.263983"]]
  [1m[35m (2.0ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 25ms (Views: 0.9ms | ActiveRecord: 4.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:44:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 18ms (Views: 3.3ms | ActiveRecord: 2.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:44:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:45:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:46:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.7ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.5ms | ActiveRecord: 0.7ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:47:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.0ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:47:53 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:49:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 9ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:51:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 6.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:51:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:52:24 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:52:35 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:52:47 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.4ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:53:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:53:33 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 1.9ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:56:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 16ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 14:56:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.1ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:02:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 14ms (Views: 2.7ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:02:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.5ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:03:06 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.3ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:03:07 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.0ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 15:03:19 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (3.9ms)
Completed 200 OK in 110ms (Views: 101.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:03:40 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.2ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:03:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 5ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:04:50 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:05:31 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Ben", "answers"=>"{\"participant_name\":\"Ben\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Ben", "answers"=>"{\"participant_name\":\"Ben\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Ben\",\"How many years have you been developing software?\":\"1\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Ruby\",\"Select two or three of your second favorite programming languages:\":[{\"Javascript\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"], ["participant_name", "Ben"], ["created_at", "2018-12-10 21:05:31.813826"], ["updated_at", "2018-12-10 21:05:31.813826"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 18ms (Views: 0.4ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for ::1 at 2018-12-10 15:05:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.4ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 8ms (Views: 1.7ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:07:58 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:08:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.0ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.2ms | ActiveRecord: 1.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:08:48 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.3ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:09:39 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:10:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:11:17 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:11:52 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 10ms (Views: 1.1ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:12:27 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.2ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 7ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:12:59 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:13:26 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"Select two or three of your second favorite programming languages:\":[]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"answers"=>"{\"Select two or three of your second favorite programming languages:\":[]}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
Completed 200 OK in 6ms (Views: 0.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:13:49 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ar", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ar", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.9ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"], ["participant_name", "ar"], ["created_at", "2018-12-10 21:13:49.647611"], ["updated_at", "2018-12-10 21:13:49.647611"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 13ms (Views: 0.3ms | ActiveRecord: 2.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:13:54 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ar", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"ar", "answers"=>"{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"Select two or three of your second favorite programming languages:\":[],\"participant_name\":\"ar\",\"How many years have you been developing software?\":\"3\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"PHP\",\"Are you guys gonna hire me?\":\"No\"}"], ["participant_name", "ar"], ["created_at", "2018-12-10 21:13:54.436636"], ["updated_at", "2018-12-10 21:13:54.436636"]]
  [1m[35m (1.8ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for ::1 at 2018-12-10 15:13:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil, "graphql"=>{"query"=>"{\n\tListQuizzes{\n    participant_name\n    answers\n  }\n}", "variables"=>{"participant_name"=>"Ransolo", "answers"=>"DUDE"}, "operationName"=>nil}}
  [1m[36mQuiz Load (1.3ms)[0m  [1m[34mSELECT "quizzes".* FROM "quizzes" ORDER BY "quizzes"."participant_name" ASC[0m
Completed 200 OK in 11ms (Views: 1.9ms | ActiveRecord: 1.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:20:46 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 64ms (Views: 3.4ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:25:16 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.9ms | ActiveRecord: 1.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:25:32 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:27:15 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:27:37 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:28:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 19ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:28:44 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:28:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.6ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 15ms (Views: 1.2ms | ActiveRecord: 0.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:29:09 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 1.8ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:29:30 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 13ms (Views: 2.2ms | ActiveRecord: 0.4ms)


Started GET "/babel/parser/lib/index.js" for 127.0.0.1 at 2018-12-10 15:29:41 -0600
Processing by QuestionnaireController#index as JS
  Parameters: {"path"=>"babel/parser/lib/index"}
  Rendering questionnaire/index.html.erb
  Rendered questionnaire/index.html.erb (4.1ms)
Completed 200 OK in 173ms (Views: 165.8ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:29:57 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.8ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:30:22 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 12ms (Views: 2.4ms | ActiveRecord: 0.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:32:01 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (2.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 67ms (Views: 8.2ms | ActiveRecord: 2.5ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 15:34:10 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.4ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 11ms (Views: 1.7ms | ActiveRecord: 0.4ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 16:29:34 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (0.3ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 8ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 16:30:02 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"15+\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"CreateQuiz", "variables"=>{"participant_name"=>"Randall", "answers"=>"{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"15+\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"}, "query"=>"mutation CreateQuiz($participant_name: String!, $answers: String!) {\n  createQuiz(participant_name: $participant_name, answers: $answers) {\n    id\n    participant_name\n    answers\n    __typename\n  }\n}\n"}}
  [1m[35m (0.4ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "quizzes" ("answers", "participant_name", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["answers", "{\"participant_name\":\"Randall\",\"How many years have you been developing software?\":\"15+\",\"Are you a good developer?\":true,\"What is your favorite programming language?\":\"Javascript\",\"Select two or three of your second favorite programming languages:\":[{\"Ruby\":true,\"PHP\":true,\"Java\":true}],\"Are you guys gonna hire me?\":\"Maybe\"}"], ["participant_name", "Randall"], ["created_at", "2018-12-10 22:30:02.402589"], ["updated_at", "2018-12-10 22:30:02.402589"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 27ms (Views: 1.4ms | ActiveRecord: 3.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 16:44:12 -0600
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.8ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 26ms (Views: 3.0ms | ActiveRecord: 1.8ms)


Started POST "/graphql" for 127.0.0.1 at 2018-12-10 17:22:45 -0600
  [1m[35m (0.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphqlController#execute as */*
  Parameters: {"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n", "graphql"=>{"operationName"=>"QuestionsQuery", "variables"=>{}, "query"=>"query QuestionsQuery {\n  Questions {\n    position\n    label\n    field_type\n    options\n    multiselect\n    __typename\n  }\n}\n"}}
  [1m[36mQuestion Load (1.5ms)[0m  [1m[34mSELECT "questions".* FROM "questions" ORDER BY "questions"."position" ASC[0m
Completed 200 OK in 91ms (Views: 12.9ms | ActiveRecord: 3.0ms)


